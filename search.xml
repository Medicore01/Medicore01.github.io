<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>game-time</title>
      <link href="/2025/02/09/game-time/"/>
      <url>/2025/02/09/game-time/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1905096353&amp;auto=1&amp;height=66"></iframe><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;记录和小宝一起玩游戏的时刻❤️</p><h2 id="It-Takes-Two"><a href="#It-Takes-Two" class="headerlink" title="It Takes Two"></a>It Takes Two</h2><ul><li>时光就像潮水，带来了一切，又带走了一切</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4df8c37e-fe4e-440d-9530-20b013d20eb3.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/eeadc6d6-64c8-403e-9c48-216c1f31ca39.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/c1051038-2a50-4af8-bb38-c59c168ea558.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f6c532a6-a83d-47c9-8468-6eec9c0c900e.jpg"></p><ul><li>大大的我和小小的她</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6e1dc145-2146-4faa-b36f-1c2c8212b094.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ecd472b9-1e1f-459e-9053-d43ba015763c.jpg"></p><ul><li>接受神经书本的治疗</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f5c7e204-8586-4cb0-a65a-89dbb265f03a.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/9d7d7bfe-9889-486d-b1e2-20c7bcfdc84f.jpg"></p><ul><li>大树啊，大树</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d54dce0f-1de1-42db-8e4b-a706eb4aa5db.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/470d7f64-d572-4c2b-a913-5fe1e6361ee9.jpg"></p><ul><li>冲冲冲</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/054083f9-3db6-46cd-bd42-4bdc405c90f0.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/404e8dac-dae9-424b-8ead-f10e811d3228.jpg"></p><ul><li>进入万花筒，沉浸在万花筒写轮眼的幻术之中吧</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4ac097aa-0e59-4a27-b32b-571bb3156434.jpg"></p><ul><li>前往大象公举的城堡</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f3cc4b22-926c-4a78-ae09-1661d3bcc0cc.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/11c3fbf1-bc76-4382-8ab3-c25d16adc678.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/159c8255-f6b5-4923-a2c7-e39973556071.jpg"></p><ul><li>激流勇进！</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2007c3fd-faf1-4b31-aa32-02033c4b72b1.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/5f3ba98d-c1ad-47d9-8643-f004aad326e2.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/8b5cd112-b600-4a54-9621-c60dc9129058.jpg"></p><ul><li>进入冰雪大世界</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fd96487a-a583-4fa5-a705-b7d787446ff4.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/831eb405-c457-41d5-8f40-731db131ca55.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b23233f1-7a5d-4f1e-946e-b6881ee0637b.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/cd2122a4-06ac-4ea6-be4f-6c0a3b0bd791.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> together </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注解备忘录</title>
      <link href="/2024/11/12/%E6%B3%A8%E8%A7%A3%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2024/11/12/%E6%B3%A8%E8%A7%A3%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="超全spring、spring-boot-注解备忘录-37个常用注解使用说明"><a href="#超全spring、spring-boot-注解备忘录-37个常用注解使用说明" class="headerlink" title="超全spring、spring boot 注解备忘录(37个常用注解使用说明)"></a>超全spring、spring boot 注解备忘录(37个常用注解使用说明)</h1><p>这篇文章是关于 Spring 和 Spring Boot 中 37 个常用注解的使用说明及详细解释，包括主类标记、组件定义、请求处理、作用域、异步任务、定时任务、条件注册、配置文件相关等方面，还提供了大量示例代码辅助理解。</p><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@SpringBootApplication</td><td>标记<code>Spring</code>应用程序的主类。组合<code>@Configuration</code>、<code>@EnableAutoConfiguration</code>和<code>@ComponentScan</code>。这是您的应用程序开始的地方</td></tr><tr><td>@Component</td><td>将类标记为Spring组件，使其成为托管bean</td></tr><tr><td>@Service</td><td>服务层类的特殊类型@Component，通常包含业务逻辑</td></tr><tr><td>@Repository</td><td>用于数据仓库类的特殊类型的 @Component。启用异常转换</td></tr><tr><td>@Controller</td><td>用于处理 Web 请求的 Spring MVC 控制器的特殊类型 @Component。</td></tr><tr><td>@RestController</td><td>结合了 @Controller 和 @ResponseBody。处理 Web 请求并直接返回 JSON/XML 响应</td></tr><tr><td>@Autowired</td><td>自动将依赖项注入到字段、setter 方法或构造函数中</td></tr><tr><td>@Value</td><td>将属性文件中的值插入字段、setter方法或构造函数参数</td></tr><tr><td>@Configuration</td><td>指示一个类声明一个或多个@Bean方法，并且可以被Spring容器处理以生成bean定义和服务请求</td></tr><tr><td>@Bean</td><td>声明一个方法，该方法返回Spring容器管理的Spring bean</td></tr><tr><td>@EnableAutoConfiguration</td><td>根据类路径中存在的依赖项自动配置Spring应用程序</td></tr><tr><td>@ComponentScan</td><td>配置用于@Configuration类的组件扫描指令。指定要扫描带注释组件的基包。</td></tr><tr><td>@RequestMapping</td><td>将Web请求映射到特定的处理程序类或处理程序方法。</td></tr><tr><td>@GetMapping</td><td>为@RequestMapping(method = RequestMethod.GET)添加标签。处理GET请求。</td></tr><tr><td>@PostMapping</td><td>为@RequestMapping(method = RequestMethod.POST)添加标签。处理POST请求。</td></tr><tr><td>@PutMapping</td><td>为@RequestMapping(method = RequestMethod.PUT)添加标签。处理PUT请求。</td></tr><tr><td>@DeleteMapping</td><td>为@RequestMapping(method = RequestMethod.DELETE)添加标签。处理DELETE请求。</td></tr><tr><td>@PatchMapping</td><td>为@RequestMapping(method = RequestMethod.PATCH)添加标签。处理PATCH请求。</td></tr><tr><td>@RequestParam</td><td>将Web请求参数绑定到方法参数。</td></tr><tr><td>@PathVariable</td><td>将URI模板变量绑定到方法参数。</td></tr><tr><td>@ResponseBody</td><td>将返回的对象序列化为指定格式（通常是 JSON 格式）并将其作为响应主体返回。</td></tr><tr><td>@CrossOrigin</td><td>在方法或类上启用跨域资源共享（CORS）</td></tr><tr><td>@ExceptionHandler</td><td>定义一个方法来处理由请求处理程序方法引发的异常</td></tr><tr><td>@ControllerAdvice</td><td>允许您处理整个应用程序中的异常，而不仅仅是单个控制器</td></tr><tr><td>@RestControllerAdvice</td><td>组合@ControllerAdvice和@ResponseBody。REST控制器</td></tr><tr><td>@RequestScope</td><td>表示 Bean 具有请求作用域</td></tr><tr><td>@SessionScope</td><td>表示 Bean 是会话作用域的</td></tr><tr><td>@ApplicationScope</td><td>指示bean是应用程序范围的</td></tr><tr><td>@SessionAttributes</td><td>用于在会话中存储模型属性</td></tr><tr><td>@ModelAttribute</td><td>将方法参数或方法返回值绑定到命名的模型属性上</td></tr><tr><td>@Async</td><td>表示方法应异步执行</td></tr><tr><td>@Scheduled</td><td>使用 cron 表达式或固定延迟/速率标记要调度的方法</td></tr><tr><td>@EnableScheduling</td><td>启用对定时任务的支持</td></tr><tr><td>@Conditional</td><td>根据条件注册bean</td></tr><tr><td>@Profile</td><td>仅当指定的配置文件处于活动状态时才注册 Bean</td></tr><tr><td>@MockBean</td><td>在 Spring 应用程序上下文中mock bean（与 Spring Boot 一起用于测试）</td></tr><tr><td>@SpyBean</td><td>在 Spring 应用程序上下文中创建 spy Bean（与 Spring Boot 一起用于测试）</td></tr></tbody></table><h2 id="详细说明及用法"><a href="#详细说明及用法" class="headerlink" title="详细说明及用法"></a>详细说明及用法</h2><h3 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h3><p>标记Spring靴子应用程序的主类。结合<code>@Configuration</code>、<code>@EnableAutoConfiguration</code>和<code>@ComponentScan</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySpringBootApplication</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        SpringApplication.run(MySpringBootApplication.class, args);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Component"><a href="#Component" class="headerlink" title="@Component"></a>@Component</h3><p>将类标记为Spring组件，使其成为托管bean</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyComponent</span> {</span><br><span class="line">    <span class="comment">// Bean methods and properties</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="@Service"></a>@Service</h3><p>@Component的特殊类型，用于服务层类，通常包含业务逻辑。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> {</span><br><span class="line">    <span class="comment">// Business logic methods</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Repository"><a href="#Repository" class="headerlink" title="@Repository"></a>@Repository</h3><p>数据存储库类的特殊类型@Component。启用异常转换</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRepository</span> {</span><br><span class="line">    <span class="comment">// Data access methods</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="@Controller"></a>@Controller</h3><p>用于处理Web请求的Spring MVC控制器的特殊类型@Component</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> {</span><br><span class="line">    <span class="meta">@RequestMapping("/hello")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h3><p>组合@Controller和@ResponseBody。处理Web请求并直接返回JSON/XML响应。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@GetMapping("/hello")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h3><p>自动将依赖项注入到字段、setter方法或构造函数中</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyComponent</span> {</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MyService myService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Use myService in methods</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Value"><a href="#Value" class="headerlink" title="@Value"></a>@Value</h3><p>将属性文件中的值插入字段、setter方法或构造函数参数</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyComponent</span> {</span><br><span class="line">    <span class="meta">@Value("${app.name}")</span></span><br><span class="line">    <span class="keyword">private</span> String appName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Use appName in methods</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><p>指示一个类声明一个或多个@Bean方法，并且可以被Spring容器处理以生成bean定义和服务请求</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> {</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MyService <span class="title function_">myService</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyService</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Bean"><a href="#Bean" class="headerlink" title="@Bean"></a>@Bean</h3><p>声明一个方法，该方法返回Spring容器管理的Spring bean</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> {</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MyService <span class="title function_">myService</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyService</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h3><p>根据类路径中存在的依赖项自动配置Spring应用程序</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySpringBootApplication</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        SpringApplication.run(MySpringBootApplication.class, args);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>SpringBootApplication是一个组合注解，组合了<code>@EnableAutoConfiguration</code></p></blockquote><h3 id="ComponentScan"><a href="#ComponentScan" class="headerlink" title="@ComponentScan"></a>@ComponentScan</h3><p>配置用于<code>@Configuration</code>类的组件扫描指令。指定要扫描带注释组件的基包。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = "com.example")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> {</span><br><span class="line">    <span class="comment">// Configuration methods</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h3><p>将Web请求映射到特定的处理程序类或处理程序方法。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> {</span><br><span class="line">    <span class="meta">@RequestMapping("/hello")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="GetMapping"><a href="#GetMapping" class="headerlink" title="@GetMapping"></a>@GetMapping</h3><p>为@RequestMapping(method = RequestMethod.GET)添加标签。处理GET请求。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@GetMapping("/greet")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">greet</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, World!"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="PostMapping"><a href="#PostMapping" class="headerlink" title="@PostMapping"></a>@PostMapping</h3><p>为@RequestMapping(method = RequestMethod.POST)添加标签。处理POST请求。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@PostMapping("/create")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">create</span><span class="params">(<span class="meta">@RequestBody</span> MyEntity entity)</span> {</span><br><span class="line">        <span class="comment">// Process entity</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Created"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="PutMapping"><a href="#PutMapping" class="headerlink" title="@PutMapping"></a>@PutMapping</h3><p>为@RequestMapping(method = RequestMethod.PUT)添加标签。处理PUT请求。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@PutMapping("/update")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> MyEntity entity)</span> {</span><br><span class="line">        <span class="comment">// Update entity</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Updated"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="DeleteMapping"><a href="#DeleteMapping" class="headerlink" title="@DeleteMapping"></a>@DeleteMapping</h3><p>为@RequestMapping(method = RequestMethod.DELETE)添加标签。处理DELETE请求。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@DeleteMapping("/delete/{id}")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> {</span><br><span class="line">        <span class="comment">// Delete entity by id</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Deleted"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="PatchMapping"><a href="#PatchMapping" class="headerlink" title="@PatchMapping"></a>@PatchMapping</h3><p>为@RequestMapping(method = RequestMethod.PATCH)添加标签。处理PATCH请求。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@PatchMapping("/patch")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">patch</span><span class="params">(<span class="meta">@RequestBody</span> MyEntity entity)</span> {</span><br><span class="line">        <span class="comment">// Patch entity</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Patched"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h3><p>将Web请求参数绑定到方法参数。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@GetMapping("/param")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">param</span><span class="params">(<span class="meta">@RequestParam</span> String name)</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, "</span> + name;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="PathVariable"><a href="#PathVariable" class="headerlink" title="@PathVariable"></a>@PathVariable</h3><p>将URI模板变量绑定到方法参数。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@GetMapping("/path/{id}")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">path</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ID: "</span> + id;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="RequestBody"><a href="#RequestBody" class="headerlink" title="@RequestBody"></a>@RequestBody</h3><p>将HTTP请求的<code>json body</code>绑定到方法参数。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@PostMapping("/body")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">body</span><span class="params">(<span class="meta">@RequestBody</span> MyEntity entity)</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Received: "</span> + entity;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="ResponseBody"><a href="#ResponseBody" class="headerlink" title="@ResponseBody"></a>@ResponseBody</h3><p>将返回的对象序列化为指定格式（通常是 JSON 格式）并将其作为响应主体返回。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> {</span><br><span class="line">    <span class="meta">@RequestMapping("/json")</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">json</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"{"</span>message<span class="string">":"</span>Hello, World!<span class="string">"}"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="CrossOrigin"><a href="#CrossOrigin" class="headerlink" title="@CrossOrigin"></a>@CrossOrigin</h3><p>在方法或类上启用跨域资源共享（CORS）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin(origins = "http://example.com")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRestController</span> {</span><br><span class="line">    <span class="meta">@GetMapping("/cors")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">cors</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"CORS Enabled"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="ExceptionHandler"><a href="#ExceptionHandler" class="headerlink" title="@ExceptionHandler"></a>@ExceptionHandler</h3><p>定义一个方法来处理由请求处理程序方法引发的异常</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> {</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleException</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>仅对<code>MyController</code>生效</p></blockquote><h3 id="ControllerAdvice"><a href="#ControllerAdvice" class="headerlink" title="@ControllerAdvice"></a>@ControllerAdvice</h3><p>允许您处理整个应用程序中的异常，而不仅仅是单个控制器</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> {</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleException</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>对所有<code>controller</code>生效</p></blockquote><h3 id="RestControllerAdvice"><a href="#RestControllerAdvice" class="headerlink" title="@RestControllerAdvice"></a>@RestControllerAdvice</h3><p>组合@ControllerAdvice和@ResponseBody。REST控制器</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalRestExceptionHandler</span> {</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleException</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"{"</span>error<span class="string">":"</span>An error occurred<span class="string">"}"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="RequestScope"><a href="#RequestScope" class="headerlink" title="@RequestScope"></a>@RequestScope</h3><p>@RequestScope 注解在 Spring 框架中用于定义 Bean 的作用域，使得每个 HTTP 请求都有实例化的独立 Bean。这意味着在同一个请求过程中，一个带有 @RequestScope 的 Bean 实例会被共享，但在不同的请求中会创建新的实例</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RequestScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRequestScopedBean</span> {</span><br><span class="line">    <span class="comment">// Bean methods and properties</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="SessionScope"><a href="#SessionScope" class="headerlink" title="@SessionScope"></a>@SessionScope</h3><p><code>@SessionScope</code> 注解在 <code>Spring</code> 框架中用于定义 Bean 的作用域，使得每个 HTTP 会话都有实例化的独立 Bean。这意味着在同一个会话过程中，一个带有 <code>@SessionScope</code> 的 Bean 实例会被共享，但在不同的会话中会创建新的实例</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="meta">@SessionScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySessionScopedBean</span> {</span><br><span class="line">    <span class="comment">// Bean methods and properties</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="ApplicationScope"><a href="#ApplicationScope" class="headerlink" title="@ApplicationScope"></a>@ApplicationScope</h3><p><code>@ApplicationScope</code> 注解在 <code>Spring</code> 框架中用于定义 Bean 的作用域，使得每个应用程序上下文都有实例化的独立 Bean。这意味着在同一个应用程序上下文中，一个带有 <code>@ApplicationScope</code> 的 Bean 实例会被共享，但在不同的应用程序上下文中会创建新的实例</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ApplicationScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplicationScopedBean</span> {</span><br><span class="line">    <span class="comment">// Bean methods and properties</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="SessionAttributes"><a href="#SessionAttributes" class="headerlink" title="@SessionAttributes"></a>@SessionAttributes</h3><p><code>@SessionAttributes</code> 注解用于在会话中存储模型属性。这些属性在多个请求之间共享，并且在会话结束时删除</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@SessionAttributes("user")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> {</span><br><span class="line">    <span class="meta">@ModelAttribute("user")</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">createUser</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="ModelAttribute"><a href="#ModelAttribute" class="headerlink" title="@ModelAttribute"></a>@ModelAttribute</h3><p><code>@ModelAttribute</code> 注解用于将方法参数或方法返回值绑定到命名的模型属性上</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> {</span><br><span class="line">    <span class="meta">@ModelAttribute("attribute")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addAttribute</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"value"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Async"><a href="#Async" class="headerlink" title="@Async"></a>@Async</h3><p><code>@Async</code> 注解表示方法应异步执行</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> {</span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncMethod</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// Async method logic</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Scheduled"><a href="#Scheduled" class="headerlink" title="@Scheduled"></a>@Scheduled</h3><p><code>@Scheduled</code> 注解使用 cron 表达式或固定延迟/速率标记要调度的方法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyScheduledTask</span> {</span><br><span class="line">    <span class="meta">@Scheduled(cron = "0 0 * * * ?")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">scheduledMethod</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// Scheduled task logic</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="EnableScheduling"><a href="#EnableScheduling" class="headerlink" title="@EnableScheduling"></a>@EnableScheduling</h3><p><code>@EnableScheduling</code> 注解启用对定时任务的支持</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> {</span><br><span class="line">    <span class="comment">// Configuration methods</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Conditional"><a href="#Conditional" class="headerlink" title="@Conditional"></a>@Conditional</h3><p><code>@Conditional</code> 注解根据条件注册 bean</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> {</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(MyCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MyService <span class="title function_">myService</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyService</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Profile"><a href="#Profile" class="headerlink" title="@Profile"></a>@Profile</h3><p><code>@Profile</code> 注解仅当指定的配置文件处于活动状态时才注册 Bean</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Profile("dev")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DevConfig</span> {</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MyService <span class="title function_">myService</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyService</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="MockBean"><a href="#MockBean" class="headerlink" title="@MockBean"></a>@MockBean</h3><p><code>@MockBean</code> 注解在 Spring 应用程序上下文中 mock bean（与 Spring Boot 一起用于测试）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> {</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@MockBean</span></span><br><span class="line">    <span class="keyword">private</span> MyService myService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// Test logic</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="SpyBean"><a href="#SpyBean" class="headerlink" title="@SpyBean"></a>@SpyBean</h3><p><code>@SpyBean</code> 注解在 Spring 应用程序上下文中创建 spy Bean（与 Spring Boot 一起用于测试）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">java代码解读复制代码<span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> {</span><br><span class="line">    <span class="meta">@SpyBean</span></span><br><span class="line">    <span class="keyword">private</span> MyService myService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// Test logic</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海明校验码的生成</title>
      <link href="/2024/03/28/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E7%A0%81%E7%9A%84%E7%94%9F%E6%88%90/"/>
      <url>/2024/03/28/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E7%A0%81%E7%9A%84%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2694bf57-65c4-4cda-9c4e-89021ab19366.png"></p><p>要想生成海明校验码一共需要完成以下四步：</p><ul><li><p>确定海明校验位的位数</p></li><li><p>确定校验位的位置</p></li><li><p>确定校验位的值</p></li><li><p>得出海明编码：信息位+校验位</p></li></ul><h2 id="1-确定海明检验位的位数"><a href="#1-确定海明检验位的位数" class="headerlink" title="1. 确定海明检验位的位数"></a>1. 确定海明检验位的位数</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先需要对待编码信息进行分组，每组一个检验位。假设待编码信息K位，分成r组，则：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;校验位个数为:r位，海明编码总长:N=k+r位。代码检验时，每组能产生1个指误码，若分成了r组，则指误码为r位，可能的指误代码有(2<sup>r</sup>-1)种。例如，现假设分成了4组（r=4），则有4位指误码G4，G3，G2，G1； 24种可能的指误代码如0000、0001、0010、….</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若指误码为全0则说明海明编码无错，其余(2^r-1)种指误代码分别用于指示(2<sup>r</sup>-1)种只有1位错的情况。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;海明检验位的位数与待编码信息的分组是直接相关的，k位有效信息位，r位奇偶校验位，k+r位新的海明编码需满足关系式： <strong>2<sup>r</sup> -1≧k+r</strong>，其中r要取满足该不等式的最小值。</p><h2 id="2-确定校验位的位置"><a href="#2-确定校验位的位置" class="headerlink" title="2.确定校验位的位置"></a>2.确定校验位的位置</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;假设一段待编码信息为 01110011010，采用偶校验。01110011010 共11位，所以k=11，满足上述关系式的最小r应是4。那么海明校验码共有11+4=15位.由此可确定初步的表格：</p><table><thead><tr><th align="center">码字位置</th><th>15</th><th>14</th><th>13</th><th>12</th><th>11</th><th>10</th><th>9</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td align="center">信息位</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">校验位</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;校验位记为Pi（i=1，2，…，r)，分别位于第2<sup>(i-1)</sup> （i=1,2,…，r)位上，其余位依次放置被校验的数据位。</p><table><thead><tr><th align="center">码字位置</th><th>15</th><th>14</th><th>13</th><th>12</th><th>11</th><th>10</th><th>9</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th align="right">1</th></tr></thead><tbody><tr><td align="center">信息位</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td></td><td>1</td><td>0</td><td>1</td><td></td><td>0</td><td></td><td align="right"></td></tr><tr><td align="center">校验位</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>√</td><td></td><td></td><td></td><td>√</td><td></td><td>√</td><td align="right">√</td></tr><tr><td align="center">复合码字</td><td>d15</td><td>d14</td><td>d13</td><td>d12</td><td>d11</td><td>d10</td><td>d9</td><td>P8</td><td>d7</td><td>d6</td><td>d5</td><td>P4</td><td>d3</td><td>P2</td><td align="right">P1</td></tr></tbody></table><h2 id="3-确定校验位的值"><a href="#3-确定校验位的值" class="headerlink" title="3.确定校验位的值"></a>3.确定校验位的值</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分组原则：有效信息位的下标等于所有参与校验该位的校验位下标之和。即：要校验的信息位的位置 i 等于校验位的位置值相加。例如：有效信息位d3，3=2+1，表明第3位分别位于P1和P2所形成的校验组里。由此原则得到每一个位置相对应的校验位表,如下：</p><table><thead><tr><th>信息位的位置</th><th>对应校验位的位置值相加</th><th>位于校验位对应的校验组</th></tr></thead><tbody><tr><td>d3</td><td>3=1+2</td><td>P1，P2</td></tr><tr><td>d5</td><td>5=1+4</td><td>P1，P4</td></tr><tr><td>d6</td><td>6=2+4</td><td>P2，P4</td></tr><tr><td>d7</td><td>7=1+2+4</td><td>P1，P2，P4</td></tr><tr><td>d9</td><td>9=1+8</td><td>P1，P8</td></tr><tr><td>d10</td><td>10=2+8</td><td>P2，P8</td></tr><tr><td>d11</td><td>11=1+2+8</td><td>P1，P2，P8</td></tr><tr><td>d12</td><td>12=4+8</td><td>P4，P8</td></tr><tr><td>d13</td><td>13=1+4+8</td><td>P1，P4，P8</td></tr><tr><td>d14</td><td>14=2+4+8</td><td>P2，P4，P8</td></tr><tr><td>d15</td><td>15=1+2+4+8</td><td>P1，P2，P4，P8</td></tr></tbody></table><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个校验位参与了哪些信息位的偶校验呢？就可写出分组方案：</p><center>P1=(d3,d5,d7,d9,d11,d13,d15)=0</center>         <center>P2=(d3,d6,d7,d10,d11,d14,d15)=0</center><center>P4=(d5,d6,d7,d12,d13,d14,d15)=1</center><center>  P8=(d9,d10,d11,d12,d13,d14,d15)=0</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样就得到了各个校验位的值。</p><h2 id="4-得出海明编码：信息位-校验位"><a href="#4-得出海明编码：信息位-校验位" class="headerlink" title="4. 得出海明编码：信息位+校验位"></a>4. 得出海明编码：信息位+校验位</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将各个校验位放置到其指定的位置上，得到海明编码为011100101011000</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指误字G=G4G3G2G1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G1=d15⊕d13⊕d11⊕d9⊕d7⊕d5⊕d3⊕P1 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G2=d15⊕d14⊕d11⊕d10⊕d7⊕d6⊕d3⊕P2  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G3=d15⊕d14⊕d13⊕d12⊕d7⊕d6⊕d5⊕P4 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G4=d15⊕d14⊕d13⊕d12⊕d11⊕d10⊕d9⊕P8</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;假设d6位出错则G1=0，G2=1，G3=1，G4=0，指误字G=0110，其中指误字0110指示的是d6位置。要想纠正错误，只需对d6位进行求反操作。</p>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成与原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>happy-time</title>
      <link href="/2024/03/27/happy-time/"/>
      <url>/2024/03/27/happy-time/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="320" height="86" src="//music.163.com/outchain/player?type=2&amp;id=2087852441&amp;auto=1&amp;height=66"></iframe><center>（一）</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;记录一些和小宝一起散步的时光</p><ul><li>雨夜</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b1e47038-af00-4f21-8b9c-917e7544bb2c.jpg"></p><ul><li>桥上</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/63bd9427-74e0-4071-aeb6-0107c67bda49.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;到小区门口等小宝，一只修勾朝我做wink。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/a00499ff-d2f7-4f96-91cf-d39e390b6af7.jpg"></p><ul><li>河边</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/821d6761-1f5a-4045-b81e-9057a2539727.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1542f368-844c-45d5-b7b8-e6abe5081585.jpg"></p><ul><li>这是一条连接我家和小宝家的路</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ac9776e4-38d0-4a01-a287-d6d450fc8388.jpg"></p><ul><li>小洋房</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d92fea43-a576-4233-a941-d34ce4360b80.jpg"></p><center> （二） </center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这周和女朋友一起去成都博物馆逛了逛，也是观赏了一波各种文物。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先是一楼出口旁的非洲象标本，虽然我们是临走才来看的，但是它给我留下的印象却很深。它叫什么名字记不起了，是美国慈善家贝林所捐赠的。标本非常精致，大象身上的褶皱，体毛都能清楚地看见。以前只在电视里见过非洲象，这样近距离还是第一次，从照片上感受不到，到它跟前会发现它真的非常大，和一层住房的高度相当。我在脑海里想象这头庞然大物动起来的样子，竟然真给我搞紧张了，像是刻在基因里的对这样大体型生物的恐惧，牵着女朋友的手都不自觉的捏紧了但是没好意思给女朋友说是这个原因哈哈哈。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b834347f-c60e-4bf6-8b62-662353ad6b82.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;整个博物馆有好几层，每层的面积也很大。游客非常多，加之天气有点炎热，刚开始其实内心是有点烦躁的，不太提得起观看的兴趣，但是有女朋友一直牵着我慢慢看慢慢走，心里面烦躁的感觉渐渐消失了，她会给我指一些有趣好玩的东西，我在开心的同时注意力也投入了进去。</p><ul><li>神秘的三星堆面具</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/5415f94e-a894-4b0d-a144-ecd64640b2db.jpg"></p><ul><li>一些石像人俑</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/06d7debc-5da1-4edd-bb1e-fffae3d332f0.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/bb9d422a-5e92-484a-bdcf-aca666319b76.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/677f815e-8561-496a-9512-e164343418a5.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/3d50a1b1-c2fe-4587-a13f-449d6c0077e3.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/dfc37c84-f4fb-4c95-9f91-b38262423d63.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2806bddd-154c-4732-98cf-5e9e46d53ec9.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1f629603-2b7a-4d98-a6dd-bd32d8ca1e5b.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像上面这样的人像有很多。有些嬉皮笑脸，有些紧皱眉头，姿势各异十分有意思，不知道是不是古代雕刻师的表现手法，这些各式各样的动作表情在现代人看来会感觉比较夸张或者觉得好笑。最后这个石像已经成为一个标志性的东西了，博物馆里有不少它的周边，一些地铁站也有它的标志。</p><ul><li>将军俑</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6ddd6b3c-c621-4f78-94da-7a4f90943b56.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(这个将军不会是张献忠吧，感觉好像)</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/44c4c76a-51bb-49c8-a920-5cad596770ec.jpg"></p><ul><li>阿育王像</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/82644401-a9fd-4173-8b6f-e5ad0aea776f.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;阿育王像旁边是一些佛像观音像之类的，还有一个巨大的佛头，但是出于一种敬畏的心理我和女朋友都只是看了看没有拍照。</p><ul><li>针灸铜人(迷你版)</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6e53b2db-29c3-4e94-9488-62bb7a823b45.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;想起了以前看过的一部电影，就是讲针灸铜人的由来。这个超级迷你，在我印象中针灸铜人应该差不多有半个人高。</p><ul><li>石兽</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/dc01e977-8ae0-45e1-b458-a349b977a961.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fdfb3fcd-133d-4df7-928e-ede9529724c2.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d92e9e39-0084-4718-aadf-4e352c867c04.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1580cc7f-5078-43c1-be24-0b38f042eb60.jpg"></p><ul><li>玉器</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b1edaa19-8b46-4200-910a-69b47edcabe7.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6a8ab2d5-63a5-4631-8c53-8b311ac762ac.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/9c5a42f8-a634-4466-aed4-7302d4825ea1.jpg"></p><ul><li>瓷器</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f303f46b-a856-455c-b4dc-9acae300c7c8.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/bd7d8271-0062-4b0a-b124-bd3d8c75aedd.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（好像三星堆的那种风格）</p><ul><li>进馆之前女朋友发现的超大树叶</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/8398346b-86ee-46a0-8380-d47422ccf37b.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/013b611b-78b6-41f3-a722-9fd24178920b.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于里面比较拥挤，照片只能随手稳着拍，这些只是博物馆的冰山一角，还有许多有意思的玩意，像皮影人，古人的日常生活用品，家具等等等等，要是每件物品都细看估计一整天都看不完。我和女朋友也只是简简单单地走马观花，但是就这么一趟下来走完还是很累。我外套穿得比较厚途开始不停地冒汗，中途干脆脱掉拿着，但是我们各自手里也拿着不少东西，等逛完了手都有点麻木了，所以以后去这样的地方还是尽量轻装上阵，整体的游玩感受肯定会好不少。总的来说，有女朋友陪着一起逛这么一趟还是超级开心的。</p><center>（三）</center><p>&nbsp;&nbsp;又到周末，我和宝贝一同前往成都市植物园。这是我第一次去植物园，整体环境还是非常不错的，植物园的面积很大，游客不算特别多。我和宝贝手牵手，没有刻意去走设计好的路线，随心所欲，自由漫步。</p><ul><li>一处小溪</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/70a6a83f-3ef2-482c-9560-ea50f7e869bc.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;溪水非常清澈，这样的涓涓细流出现在我面前已经是很久很久以前。一片生机盎然，我和宝贝停下脚步，共同记录。</p><ul><li>不知名植物</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/acdcda82-79b6-4f6a-abe1-d0eb3168bdde.jpg"></p><ul><li>红枫</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1963d595-a84e-455f-b0e2-62780377c68e.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2b4db7ae-3fad-4c1f-abb0-ffd9adb16544.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/654947c2-f348-4fd5-bb5b-a0a4f6119b78.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/e4887687-e710-4e10-bdbf-595fb8ab130a.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;进入初秋，红枫的叶子还没有完全变红，但是在一片墨绿中已经十分显眼。凑近几棵茂密的红枫里，数不尽的枫叶像星星把镜头围住，我和宝贝靠在一起，欣赏这片美丽的星光。</p><ul><li>桫椤</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/43fdef9e-9b55-4648-9317-06fcc0306928.jpg"></p><ul><li>其他</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2ef95ed7-cf74-4ae5-baad-e98ccd6bb833.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/94f7f43b-b72e-45cf-aca3-cbfbe5739a42.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;红土上既有参天的大树，也有不少幼苗。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/e7562338-4e99-4d35-88ea-d154d5fb5cc9.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f599ffd7-ac0b-441f-8a9e-3dd86a282ae0.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和植物园的前山相比，后面看起来荒凉了一些。青草没有长满整片黄土，留下大片大片光秃秃的地面，落满了枯叶。树木很多但是枝叶并不茂盛。</p><ul><li>奇特的花？</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/294161b4-1ca9-437d-bc4e-9ae40960565e.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们在下山的路上边走边休息，宝贝突然发现了几株和周围画风格格不入的植物，叶子像是用蜡笔画出来的。宝贝将它们拍了下来，一共就只有四五株，悄悄藏在路边，给细心观察的人一个惊喜。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;逛了三四个小时，我们还有很多地方没有去。一直走其实很容易累，但是里面还是设置了不少椅子亭子供游客休息。植物园是一个亲近大自然的好地方，除了植物也有许多的鸟类，在路上鸟鸣声会一直充当BGM。这样的地方不同的季节就会有不同的景色，现在已经是来年的春夏了，我和宝贝有时间还会一起去逛逛。</p><center>（四）</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和小宝一起到塔子山公园玩，整个公园面积很大，但是没有什么好玩的，植物和鸟类都比较多，环境还可以。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b620a65b-23db-46cb-a8d7-b9e9956b7ff7.jpg"></p><ul><li>九天楼</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/65f2ed8e-d605-43ae-8a76-a5f9d29e767f.jpg" alt="九天楼"></p><ul><li>公园外围</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/87cfa660-56b7-4f17-9687-6d726a34cbc0.jpg" alt="外围"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们从公园出来后在路边发现了很多想豆角一样的植物</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/8b4eb008-6afa-4d87-8064-7ae421ef72af.jpg"></p><center>(五)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三天假期，和小宝到武侯祠逛逛。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一到假期这些景区就是人山人海，这里主要是记载一些蜀汉的人物事迹，历史渊源，如果是历史特别是蜀汉历史的爱好者会觉得这里很有意思，但是不是很适合情侣一起，里面的布局安排不太行，很容易兜圈子。而且人太多了想拍照留念都不好拍，不过是和小宝一起逛，也还是有趣。</p><ul><li>立石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7c5dcc9c-b749-4379-9889-a29a7be519d2.jpg"></p><ul><li>唐安刘芬书石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/8c3fde95-0d5a-4e06-a01d-b409e0733a2d.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有很多人物的塑像没有拍下来，一是人太多了不好拍照，二是看塑像的地方离塑像太近了，拍出来效果不佳。</p><ul><li>翠明楼前</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/9800f469-6e10-480c-b62d-b82e0994a3a5.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;武侯祠入口右边就是锦里古街，不论是人造的还是保留下来的，整条街道确实有“古”的风格，有不少卖零食的小店发些试吃品，如果挨着挨着拿估计都能吃个半饱。我和小宝一直牵着慢慢逛，感觉比武侯祠有意思些。哦对了，武侯祠和锦里外面那一截有非常多的藏族人，特征也是非常明显，几乎都是卷发黑皮肤，面相有些不善，扎堆聚集在一起，走旁边经过的时候其实还是有点压迫感的。附近有很多藏族人开的喇嘛用品店，里面卖些袈裟法器之类的东西，路上也有不少喇嘛。总的来说还是和小宝一起度过了个不错的假期。</p><center>(六)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;小宝来我学校，把这个平淡的周末变得开心有趣。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然学校不大，但是真逛起来还是要逛一段时间，和小宝不是第一次逛了，但是我们每次都可以发现一些新的有趣的东西。和小宝一起逛比平时我自己在学校里散步有意思得多。</p><ul><li>小路</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6aaa4d9c-e10b-42c3-84ba-cdd9d223d040.jpg"></p><ul><li>体育馆外</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b8378123-1020-4b67-b4c6-1e8e955efa2b.jpg"></p><ul><li>游泳馆前</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/00ae25fe-7839-4797-800a-179ae8d020b8.jpg"></p><ul><li>银杏大道</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/e5cffe8c-6888-4420-a699-52718fff76cc.jpg"></p><ul><li>和小宝一起吃学校食堂</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d28d8dcb-3b77-486c-b769-9b3e6b272587.jpg"></p><center>（七）</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们回成都出来的地铁站外有一家麦当劳，坐车太累了不想走远我们就会在这里吃上一顿。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/eb524fb6-b9ce-4e80-934d-88cf90bd41a6.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/9645b4f1-a33d-482e-b0b4-43875617e629.jpg"></p><p>（这个超级腻）</p><center>(八)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白家肥肠粉味道确实不错，我和小宝去吃了好几次了，搭配一个牛肉锅盔越吃越香。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/feafd7df-787c-40af-8fe6-be85b94f4f8b.jpg"></p><center>(九)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;天府广场下面有很多小餐馆，这家烤肉味道还算不错，我们第一次到天府广场玩就吃的这家。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/37e177b7-aa6f-482f-8648-5d19b8339f68.jpg"></p><center>(十)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以前没吃过凉糕，这次和小宝一起尝尝，甜津津的很好吃。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/88c4d4e0-f0e2-45ef-a532-04e265492c9c.jpg"></p><center>(十一)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和小宝一起吃拉面，以前看火影忍者就很好奇日本的拉面是什么味道的。这家老板是日本人应该还是很正宗的，但是不好吃，吃不惯。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/96e5c970-a2ea-4890-aac3-b3decb2feba9.jpg"></p><center>(十二)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Kitty 小蛋糕，卖相和味道都不错 ::happy:</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fe7680e4-d03a-4bf9-8910-285e93b55b45.jpg"></p><center>(十三)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和小宝一起逛商场，发现一只野生小八！</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4fb50836-d77d-4e6e-bdae-1abbb9be10a9.jpg"></p><center>（十四）</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;小宝选了一家牛排海鲜自助我们专门打的过去，结果发现太火爆了还要排队入场，前面十好几桌，而且时间也不早了，于是决定和小宝一起去吃肯德基。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1a560fcb-23ad-4484-be2a-bd145c0d16b3.jpg"></p><p>好久没吃快餐了，偶尔来一次热量炸弹还是很过瘾的，特别是和小宝一起，外面还下着雨。</p><center>（十五）</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和小宝再逛校园，不一样的季节有不一样的风格，这部分绿化拉满了哈哈哈。</p><ul><li>僻静的小路，和小宝边走边聊天 :happy:</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/3b24cfac-b1bd-433d-bed0-c9274d915fc0.jpg"></p><ul><li>不知名红叶，被冷风吹得有点焉了</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/a2c46728-5cbc-4641-b314-24bee749ffa1.jpg"></p><ul><li>超大古树，现在长满了青苔（最近经常下雨，学校里的树都长了很多青苔）</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/60a55501-8ba3-47be-9387-132c10b298be.jpg"></p><center>(十六)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和小宝一起吃酸角，芜湖！</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b857cec4-f885-4269-8c47-3d9e6c71ab65.jpg"></p><center>(十七)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;和小宝再一次去逛植物园😎，时隔多天，这次逛得更加彻底！😀</p><p>&nbsp;&nbsp;&nbsp;&nbsp;小宝找到的拍摄地点，拍出来就像画一样😘超厉害的小宝😍</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7fecdf8d-ef80-4a13-b2cc-fcc41835af9d.jpg"></p><ul><li>茂密的树林</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/bf88100f-39c1-46d1-bf70-7aeebc0effe0.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/5a8301cf-f687-447a-aa4c-89d72adff1ed.jpg"></p><ul><li>不知名小花🌹</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/c663eb18-67e6-491d-8480-a5cc034ca0d3.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/3debfd11-e929-4ed0-b6de-c483138aa399.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d5534d4f-29fc-42f2-a6bf-6ca90f9c5b7a.jpg"></p><ul><li>绿色的枫叶</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/8b64db8f-9e57-4072-9824-fb64a223399d.jpg"></p><ul><li>洁白花簇</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6cb25fce-47d9-4d13-9da4-9dc6b41be895.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/6dbafec1-1851-42d6-a874-3fa0670b2de3.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7031c579-7129-4d22-8cec-37b39c909fd9.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/420a5716-5b26-4e89-aec4-c11e54324e23.jpg"></p><ul><li>不知名蕨类</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f070d36b-4ac3-40e6-992b-caf6cc3ed4e7.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;这里的树上有超多松鼠🐿️，以前还没有在现实中看到过，这次和小宝一起看到了🥰</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/578ffa87-f101-4a99-8971-29c02ba3ebfd.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/109acd8b-2800-4da3-9bab-616047f633aa.jpg"></p><ul><li>打破碗花花</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2b07c5a4-e095-4f41-90ed-8a39c392b82c.jpg"></p><ul><li>地涌金莲(枯萎版)</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/65906914-dacd-453e-ae71-b5bdfd219ee5.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;植物园真的比较大，走到后面我们已经非常累了，还是没有和小宝把所有地方走完，下次继续🧐，每次还是要选择一定的地方，不能太贪想每个地方都去。</p><center>(十八)</center><p>&nbsp;&nbsp;&nbsp;&nbsp;这次和小宝去了成都自然博物馆，感觉超级有趣！里面主要是恐龙化石和一些矿石，种类太多了，一下午都看不完😋</p><ul><li>螺丝子</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/236c851e-d2e0-4588-ad09-cdd6c62e500b.jpg"></p><ul><li>修恐龙</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/a3ddeb35-94ca-4fcb-80f2-16c830a37408.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/174c91ae-49f3-41cd-b711-5cdebe8c80ad.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;这头龙特别特别长，开了全景才拍完</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/93db9118-82b8-4831-9553-d8a80f242cfb.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/e1085f0b-7cd5-405a-80c5-087a605f058a.jpg"></p><ul><li>翼龙</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1a529f84-d26f-4e18-adbb-46e8737d7b1d.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/da53bba3-a509-47f8-84bb-9de0f5c96e5e.jpg"></p><ul><li>三叶虫</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d49a69c5-41c5-41e1-aabc-d34e993f032f.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f4428868-8d11-4b6c-912c-5776de4c939c.jpg"></p><ul><li>霸王龙与三角龙</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/c1fe7099-0998-40f9-b763-33ad0d3cd15f.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/54e6a057-309a-430d-a8af-6d0909120df0.jpg"></p><ul><li>大灭绝</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/01648e32-6bbc-4b51-a2c6-9a97eee3c98b.jpg"></p><ul><li>文石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/03201d7c-0375-475d-8675-c0eb79070e42.jpg"></p><ul><li>青金石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/51cf5a7d-d825-4c2f-9820-36a0651236b0.jpg"><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/936d5978-48af-4dbb-9513-fa9f4ef48836.jpg"></p><ul><li><p>蓝宝石</p><p>&nbsp;&nbsp;&nbsp;&nbsp;这个六射星光蓝宝石在光线方向正确的时候可以变成一个六芒星👓</p></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/813946fa-9306-4f2f-857d-8e6779ddb043.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1584c027-06b7-43fd-a9df-50ae77cc82c8.jpg"></p><ul><li>方解石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2e317516-593c-4dc4-9269-d3c69b51d69f.jpg"></p><ul><li>猫眼石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/64d83243-67ae-4314-9a14-dacbbb9fb9c2.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b4cdc74a-ca23-4adf-bbf6-1dd901c7a556.jpg"></p><ul><li>赤铁矿</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/a2f760ef-4aab-41a6-852f-8ae81be26924.jpg"></p><ul><li>紫水晶</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ea37d79b-4450-4cc6-be7b-0fa9bac6435d.jpg"></p><ul><li>各种萤石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2e15151d-22fc-490e-8502-fea26b83c144.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d87d2a5a-6218-44fc-ad47-e3863d6d520b.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fa2e0284-658e-4c15-b893-1fdd2ec07a50.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2647158a-db7b-4688-a7d1-e464c6f96bf2.jpg"></p><ul><li><p>水硅钙石</p><p>&nbsp;&nbsp;&nbsp;&nbsp;这个以前化学题经常遇到</p></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/f085d8f8-d2e6-4526-8c61-74bde649f2f1.jpg"></p><ul><li>辉锑矿</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4cb32b78-5e3f-486a-a24f-31c4725039c2.jpg"></p><ul><li>蓝铜矿</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/daa9cb33-f0ff-4919-825a-8def74a55a3c.jpg"></p><ul><li>铬铅矿和钒铅矿</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/43d9e696-5910-4a01-8e89-d2f1f4116cc5.jpg"></p><ul><li>黄水晶</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/5b8a24a9-aee0-441e-b5de-e9e0040440b2.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/93308632-74f6-4696-ae72-49bd6acb8ee6.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7c19a966-4091-4bd3-b49d-e9b2c25d9588.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/02faabb5-5168-4909-bf18-a452d76962a2.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;玉化的木头，神奇</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/e38af9cb-eee2-4795-863c-1b4b063c8a6a.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4885b9e5-bbf2-468f-84fc-0919889c1073.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/14309026-0efc-4b44-a188-73cdca8fc147.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/afc493e3-38a1-458a-87ed-7a8f52d1e3eb.jpg"></p><ul><li>摩根石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/602e17e5-9d26-47b6-a2e7-8a9d1c3d014e.jpg"></p><ul><li>桃花玉</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/babd805a-9f81-4225-bc8b-1079afed3e15.jpg"></p><ul><li>欧泊</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/dec921eb-ed9b-4505-a5e7-d6ab2a5ad1e4.jpg"></p><ul><li>绿松石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/b0c2cb5d-5a47-4f2a-8790-cd00ef05e59a.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/86e58ffc-5164-465b-a908-ab0233fc86be.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4e49849e-7fdc-4ee4-bae3-7658f4cca217.jpg"></p><ul><li>尖晶石</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/dbde7732-d5b6-4020-8ba9-12bc8098efcc.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/66736ef7-0912-4c26-ad57-6d1d805387aa.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2c4ba9bb-d0c2-4899-bd7d-4c7fbebaab6c.jpg"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;馆里的东西种类太多了，一个一个慢慢看要看超级久，开始本来买了奶茶和吃的准备和小宝边逛边吃，不过这些东西不能带进去😢，不过有小宝陪我逛，还是非常不错！😏</p><center>（十九）</center><p>&nbsp;&nbsp;&nbsp;&nbsp;又是和小宝逛学校的一个周末😉</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/053f3454-79a3-425a-81ec-bf276738c74a.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/1726b9fa-0d9a-477a-974d-1c6107c72ab8.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/731ca1bc-71b2-4264-a526-3902a965dd47.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/92b06772-babc-400a-99d1-163e19e78709.jpg"></p><center>（二十）</center><center>（二十一）</center>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> together </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Mysql Workbench生成EER图</title>
      <link href="/2024/03/26/%E9%80%9A%E8%BF%87Workbench%E7%94%9F%E6%88%90EER%E5%9B%BE/"/>
      <url>/2024/03/26/%E9%80%9A%E8%BF%87Workbench%E7%94%9F%E6%88%90EER%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EER图可以较为直观的观察设计出的表相互之间的联系，这里使用 Workbnench 来演示如何生成Mysql中设计的 database 的EER图。</p><ol><li>进入 Workbench 选择 Database 下的 Reverse Engineer</li></ol><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7922d8e7-9fef-4189-9c96-b7f30866a427.png" alt="picture"></p><ol start="2"><li>进入后输入相应的端口号，用户名密码等如下图</li></ol><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/c9a19947-0036-46f1-882d-ca5e491dadfb.png"></p><ol start="3"><li>选择想要转换为 EER 图的 database 点击 next</li></ol><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fe797c39-6408-4e50-9ba7-65f49863c2ab.png"></p><ol start="4"><li>生成结果</li></ol><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/98dc49f7-66d8-45f2-84a8-5e8c05d48384.png"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原本是想找到一个能根据 Mysql 中的 database 直接生成 ER 图的工具或者方法，但是到目前为止都没有查到，只能使用 visio 等相关软件自己手动绘制，不过好在 EER 图也很直观，功能大差不差吧</p>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于WIndows 11桌面图标自动变小</title>
      <link href="/2023/11/02/%E5%85%B3%E4%BA%8EWIndows-11%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E8%87%AA%E5%8A%A8%E5%8F%98%E5%B0%8F/"/>
      <url>/2023/11/02/%E5%85%B3%E4%BA%8EWIndows-11%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E8%87%AA%E5%8A%A8%E5%8F%98%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<p>WIndows 11 中有些奇奇怪怪的异常，比如某次开机突然发现自己桌面上的图标都变得小小的。先说说查找到的原因，然后是解决方法。</p><ul><li><p>为什么桌面上的图标自动变小了？</p><p>主要的原因是把设备的分辨率调得过高了，也有可能是因为 DPI (<em>DPI  是用于测量鼠标灵敏度的标准,表示设备可以检测的  DPIs  (每线性) 英寸的点数</em>。)设置是非标准的。这个异常主要发生在改变分辨率或自动调整DPI设置的时候，但它只影响非 WIndows 应用程序的图标。</p></li><li><p>如何解决这个异常？</p><ol><li><p>快速解决方案——清除图标缓存</p><p>找到 AppData 文件夹(通常在用户目录下的用户名目录中)，依次点击 Local, Microsoft, Windows, Explorer。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7671c81a-74f4-4f83-b35f-30b6fdcf5e9d.png"></p><p>删除所有文件名前面带有 iconcache,后缀名为 db 的文件,除此之外不要删掉这里的任何文件,之后重启电脑,图标缓存将重建,图标大小多半可以恢复。</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/909effe2-2f68-41bc-a9fc-40e25e8bb67a.png"></p></li><li><p>可以阻止此异常的发生吗？</p><p>不行，目前没有能永久修复此异常的方法，但是微软也许已经注意到了这个异常，并在未来进行修复，但目前来说，阻止此异常的最好方法是不要过多地切换分辨率。(至少还是很容易修复的)</p></li></ol></li></ul><p><code> end</code></p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>commons-io方法总结</title>
      <link href="/2023/11/02/commons-io%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2023/11/02/commons-io%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>写在之前：各种IO操作在开发过程中必不可少，如果进行手写会非常复杂繁琐，在这里对找到的相关资料进行搬运和总结，便于复习和查找</p><h1 id="IOUtils（数据相关）"><a href="#IOUtils（数据相关）" class="headerlink" title="IOUtils（数据相关）"></a>IOUtils（数据相关）</h1><h3 id="拷贝方法："><a href="#拷贝方法：" class="headerlink" title="拷贝方法："></a>拷贝方法：</h3><p>copy方法有多个重载方法，满足不同的输入输出流</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.copy(InputStream input, OutputStream output)</span><br><span class="line"></span><br><span class="line">IOUtils.copy(InputStream input, OutputStream output, <span class="type">int</span> bufferSize)<span class="comment">//可指定缓冲区大小</span></span><br><span class="line"></span><br><span class="line">IOUtils.copy(InputStream input, Writer output, String inputEncoding)<span class="comment">//可指定输入流的编码表</span></span><br><span class="line"></span><br><span class="line">IOUtils.copy(Reader input, Writer output)</span><br><span class="line"></span><br><span class="line">IOUtils.copy(Reader input, OutputStream output, String outputEncoding)<span class="comment">//可指定输出流的编码表</span></span><br></pre></td></tr></tbody></table></figure><h3 id="拷贝大文件的方法："><a href="#拷贝大文件的方法：" class="headerlink" title="拷贝大文件的方法："></a>拷贝大文件的方法：</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个方法适合拷贝较大的数据流，比如2G以上</span></span><br><span class="line"></span><br><span class="line">IOUtils.copyLarge(Reader input, Writer output) <span class="comment">// 默认会用1024*4的buffer来读取</span></span><br><span class="line"></span><br><span class="line">IOUtils.copyLarge(Reader input, Writer output, <span class="type">char</span>[] buffer)<span class="comment">//可指定缓冲区大小</span></span><br></pre></td></tr></tbody></table></figure><h3 id="将输入流转换成字符串"><a href="#将输入流转换成字符串" class="headerlink" title="将输入流转换成字符串"></a>将输入流转换成字符串</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.toString(Reader input)</span><br><span class="line"></span><br><span class="line">IOUtils.toString(<span class="type">byte</span>[] input, String encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.toString(InputStream input, Charset encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.toString(InputStream input, String encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.toString(URI uri, String encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.toString(URL url, String encoding)</span><br></pre></td></tr></tbody></table></figure><h3 id="将输入流转换成字符数组"><a href="#将输入流转换成字符数组" class="headerlink" title="将输入流转换成字符数组"></a>将输入流转换成字符数组</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.toByteArray(InputStream input)</span><br><span class="line"></span><br><span class="line">IOUtils.toByteArray(InputStream input, <span class="type">int</span> size)</span><br><span class="line"></span><br><span class="line">IOUtils.toByteArray(URI uri)</span><br><span class="line"></span><br><span class="line">IOUtils.toByteArray(URL url)</span><br><span class="line"></span><br><span class="line">IOUtils.toByteArray(URLConnection urlConn)</span><br><span class="line"></span><br><span class="line">IOUtils.toByteArray(Reader input, String encoding)</span><br><span class="line"></span><br><span class="line">&nbsp;</span><br></pre></td></tr></tbody></table></figure><h3 id="字符串读写"><a href="#字符串读写" class="headerlink" title="字符串读写"></a>字符串读写</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.readLines(Reader input)</span><br><span class="line"></span><br><span class="line">IOUtils.readLines(InputStream input, Charset encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.readLines(InputStream input, String encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.writeLines(Collection&lt;?&gt; lines, String lineEnding, Writer writer)</span><br><span class="line"></span><br><span class="line">IOUtils.writeLines(Collection&lt;?&gt; lines, String lineEnding, OutputStream output, Charset encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.writeLines(Collection&lt;?&gt; lines, String lineEnding, OutputStream output, String encoding)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="从一个流中读取内容"><a href="#从一个流中读取内容" class="headerlink" title="从一个流中读取内容"></a>从一个流中读取内容</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.read(InputStream input, <span class="type">byte</span>[] buffer)</span><br><span class="line"></span><br><span class="line">IOUtils.read(InputStream input, <span class="type">byte</span>[] buffer, <span class="type">int</span> offset, <span class="type">int</span> length) IOUtils.read(Reader input, <span class="type">char</span>[] buffer)</span><br><span class="line"></span><br><span class="line">IOUtils.read(Reader input, <span class="type">char</span>[] buffer, <span class="type">int</span> offset, <span class="type">int</span> length)</span><br></pre></td></tr></tbody></table></figure><h3 id="把数据写入到输出流中"><a href="#把数据写入到输出流中" class="headerlink" title="把数据写入到输出流中"></a>把数据写入到输出流中</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.write(<span class="type">byte</span>[] data, OutputStream output)</span><br><span class="line"></span><br><span class="line">IOUtils.write(<span class="type">byte</span>[] data, Writer output, Charset encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.write(<span class="type">byte</span>[] data, Writer output, String encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.write(<span class="type">char</span>[] data, Writer output)</span><br><span class="line"></span><br><span class="line">IOUtils.write(<span class="type">char</span>[] data, OutputStream output, Charset encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.write(<span class="type">char</span>[] data, OutputStream output, String encoding)</span><br><span class="line"></span><br><span class="line">IOUtils.write(String data, Writer output)</span><br><span class="line"></span><br><span class="line">IOUtils.write(CharSequence data, Writer output)</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="从一个流中读取内容，如果读取的长度不够，就会抛出异常"><a href="#从一个流中读取内容，如果读取的长度不够，就会抛出异常" class="headerlink" title="从一个流中读取内容，如果读取的长度不够，就会抛出异常"></a>从一个流中读取内容，如果读取的长度不够，就会抛出异常</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.readFully(InputStream input, <span class="type">int</span> length)</span><br><span class="line"></span><br><span class="line">IOUtils.readFully(InputStream input, <span class="type">byte</span>[] buffer)</span><br><span class="line"></span><br><span class="line">IOUtils.readFully(InputStream input, <span class="type">byte</span>[] buffer, <span class="type">int</span> offset, <span class="type">int</span> length) IOUtils.readFully(Reader input, <span class="type">char</span>[] buffer)</span><br><span class="line"></span><br><span class="line">IOUtils.readFully(Reader input, <span class="type">char</span>[] buffer, <span class="type">int</span> offset, <span class="type">int</span> length)</span><br></pre></td></tr></tbody></table></figure><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.contentEquals(InputStream input1, InputStream input2) <span class="comment">// 比较两个流是否相等</span></span><br><span class="line"></span><br><span class="line">IOUtils.contentEquals(Reader input1, Reader input2)</span><br><span class="line"></span><br><span class="line">IOUtils.contentEqualsIgnoreEOL(Reader input1, Reader input2) <span class="comment">// 比较两个流，忽略换行符</span></span><br><span class="line"></span><br><span class="line">&nbsp;</span><br></pre></td></tr></tbody></table></figure><h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IOUtils.skip(InputStream input, <span class="type">long</span> toSkip) <span class="comment">// 跳过指定长度的流</span></span><br><span class="line"></span><br><span class="line">IOUtils.skip(Reader input, <span class="type">long</span> toSkip)</span><br><span class="line"></span><br><span class="line">IOUtils.skipFully(InputStream input, <span class="type">long</span> toSkip) <span class="comment">// 如果忽略的长度大于现有的长度，就会抛出异常</span></span><br><span class="line"></span><br><span class="line">IOUtils.skipFully(Reader input, <span class="type">long</span> toSkip)</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h1 id="FileUtils（文件-文件夹相关）"><a href="#FileUtils（文件-文件夹相关）" class="headerlink" title="FileUtils（文件/文件夹相关）"></a>FileUtils（文件/文件夹相关）</h1><h3 id="复制文件夹"><a href="#复制文件夹" class="headerlink" title="复制文件夹"></a>复制文件夹</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.copyDirectory(File srcDir, File destDir) <span class="comment">// 复制文件夹（文件夹里面的文件内容也会复制）</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyDirectory(File srcDir, File destDir, FileFilter filter) <span class="comment">// 复制文件夹，带有文件过滤功能</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyDirectoryToDirectory(File srcDir, File destDir) <span class="comment">// 以子目录的形式将文件夹复制到到另一个文件夹下</span></span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.copyFile(File srcFile, File destFile) <span class="comment">// 复制文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyFile(File input, OutputStream output) <span class="comment">// 复制文件到输出流</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyFileToDirectory(File srcFile, File destDir) <span class="comment">// 复制文件到一个指定的目录</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyInputStreamToFile(InputStream source, File destination) <span class="comment">// 把输入流里面的内容复制到指定文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyURLToFile(URL source, File destination) <span class="comment">// 把URL 里面内容复制到文件(可以下载文件)</span></span><br><span class="line"></span><br><span class="line">FileUtils.copyURLToFile(URL source, File destination, <span class="type">int</span> connectionTimeout, <span class="type">int</span> readTimeout)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="把字符串写入文件"><a href="#把字符串写入文件" class="headerlink" title="把字符串写入文件"></a>把字符串写入文件</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.writeStringToFile(File file, String data, String encoding)</span><br><span class="line"></span><br><span class="line">FileUtils.writeStringToFile(File file, String data, String encoding, <span class="type">boolean</span> append)</span><br></pre></td></tr></tbody></table></figure><h3 id="把字节数组写入文件"><a href="#把字节数组写入文件" class="headerlink" title="把字节数组写入文件"></a>把字节数组写入文件</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.writeByteArrayToFile(File file, <span class="type">byte</span>[] data)</span><br><span class="line"></span><br><span class="line">FileUtils.writeByteArrayToFile(File file, <span class="type">byte</span>[] data, <span class="type">boolean</span> append) FileUtils.writeByteArrayToFile(File file, <span class="type">byte</span>[] data, <span class="type">int</span> off, <span class="type">int</span> len) FileUtils.writeByteArrayToFile(File file, <span class="type">byte</span>[] data, <span class="type">int</span> off, <span class="type">int</span> len, <span class="type">boolean</span> append)</span><br></pre></td></tr></tbody></table></figure><h3 id="把集合里面的内容写入文件"><a href="#把集合里面的内容写入文件" class="headerlink" title="把集合里面的内容写入文件"></a>把集合里面的内容写入文件</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// encoding：文件编码，lineEnding：每行以什么结尾</span></span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, Collection&lt;?&gt; lines)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, Collection&lt;?&gt; lines, <span class="type">boolean</span> append)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, Collection&lt;?&gt; lines, String lineEnding)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, Collection&lt;?&gt; lines, String lineEnding, <span class="type">boolean</span> append)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, String encoding, Collection&lt;?&gt; lines)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, String encoding, Collection&lt;?&gt; lines, <span class="type">boolean</span> append)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, String encoding, Collection&lt;?&gt; lines, String lineEnding)</span><br><span class="line"></span><br><span class="line">FileUtils.writeLines(File file, String encoding, Collection&lt;?&gt; lines, String lineEnding, <span class="type">boolean</span> append)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="往文件里面写内容"><a href="#往文件里面写内容" class="headerlink" title="往文件里面写内容"></a>往文件里面写内容</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.write(File file, CharSequence data, Charset encoding)</span><br><span class="line"></span><br><span class="line">FileUtils.write(File file, CharSequence data, Charset encoding, <span class="type">boolean</span> append)</span><br><span class="line"></span><br><span class="line">FileUtils.write(File file, CharSequence data, String encoding)</span><br><span class="line"></span><br><span class="line">FileUtils.write(File file, CharSequence data, String encoding, <span class="type">boolean</span> append)</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="文件移动"><a href="#文件移动" class="headerlink" title="文件移动"></a>文件移动</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.moveDirectory(File srcDir, File destDir) <span class="comment">// 文件夹在内的所有文件都将移动FileUtils.moveDirectoryToDirectory(File src, File destDir, boolean createDestDir) // 以子文件夹的形式移动到另外一个文件下</span></span><br><span class="line"></span><br><span class="line">FileUtils.moveFile(File srcFile, File destFile) <span class="comment">// 移动文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.moveFileToDirectory(File srcFile, File destDir, <span class="type">boolean</span> createDestDir) <span class="comment">// 以子文件的形式移动到另外一个文件夹下</span></span><br><span class="line"></span><br><span class="line">FileUtils.moveToDirectory(File src, File destDir, <span class="type">boolean</span> createDestDir) <span class="comment">// 移动文件或者目录到指定的文件夹内</span></span><br><span class="line"></span><br><span class="line">&nbsp;</span><br></pre></td></tr></tbody></table></figure><h3 id="清空和删除文件夹"><a href="#清空和删除文件夹" class="headerlink" title="清空和删除文件夹"></a>清空和删除文件夹</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.deleteDirectory(File directory) <span class="comment">// 删除文件夹，包括文件夹和文件夹里面所有的文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.cleanDirectory(File directory) <span class="comment">// 清空文件夹里面的所有的内容</span></span><br><span class="line"></span><br><span class="line">FileUtils.forceDelete(File file) <span class="comment">// 删除，会抛出异常</span></span><br><span class="line"></span><br><span class="line">FileUtils.deleteQuietly(File file) <span class="comment">// 删除，不会抛出异常</span></span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.forceMkdir(File directory) <span class="comment">// 创建文件夹(可创建多级)</span></span><br><span class="line"></span><br><span class="line">FileUtils.forceMkdirParent(File file) <span class="comment">// 创建文件的父级目录</span></span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="获取文件输入-输出流"><a href="#获取文件输入-输出流" class="headerlink" title="获取文件输入/输出流"></a>获取文件输入/输出流</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.openInputStream(File file)</span><br><span class="line"></span><br><span class="line">FileUtils.openOutputStream(File file)</span><br></pre></td></tr></tbody></table></figure><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.readFileToByteArray(File file) <span class="comment">// 把文件读取到字节数组</span></span><br><span class="line"></span><br><span class="line">FileUtils.readFileToString(File file, Charset encoding) <span class="comment">// 把文件读取成字符串</span></span><br><span class="line"></span><br><span class="line">FileUtils.readFileToString(File file, String encoding)</span><br><span class="line"></span><br><span class="line">FileUtils.readLines(File file, Charset encoding) <span class="comment">// 把文件读取成字符串集合</span></span><br><span class="line"></span><br><span class="line">FileUtils.readLines(File file, String encoding)</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="测试两个文件的修改时间"><a href="#测试两个文件的修改时间" class="headerlink" title="测试两个文件的修改时间"></a>测试两个文件的修改时间</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.isFileNewer(File file, Date date)</span><br><span class="line"></span><br><span class="line">FileUtils.isFileNewer(File file, File reference)</span><br><span class="line"></span><br><span class="line">FileUtils.isFileNewer(File file, <span class="type">long</span> timeMillis)</span><br><span class="line"></span><br><span class="line">FileUtils.isFileOlder(File file, Date date)</span><br><span class="line"></span><br><span class="line">FileUtils.isFileOlder(File file, File reference)</span><br><span class="line"></span><br><span class="line">FileUtils.isFileOlder(File file, <span class="type">long</span> timeMillis)</span><br><span class="line"></span><br><span class="line">&nbsp;</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="文件-文件夹的迭代"><a href="#文件-文件夹的迭代" class="headerlink" title="文件/文件夹的迭代"></a>文件/文件夹的迭代</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.iterateFiles(File directory, IOFileFilter fileFilter, IOFileFilter dirFilter)</span><br><span class="line"></span><br><span class="line">FileUtils.iterateFiles(File directory, String[] extensions, <span class="type">boolean</span> recursive)</span><br><span class="line"></span><br><span class="line">FileUtils.iterateFilesAndDirs(File directory, IOFileFilter fileFilter, IOFileFilter dirFilter)</span><br><span class="line"></span><br><span class="line">FileUtils.lineIterator(File file)</span><br><span class="line"></span><br><span class="line">FileUtils.lineIterator(File file, String encoding)</span><br><span class="line"></span><br><span class="line">&nbsp;</span><br><span class="line"></span><br><span class="line">FileUtils.listFiles(File directory, IOFileFilter fileFilter, IOFileFilter dirFilter)</span><br><span class="line"></span><br><span class="line">FileUtils.listFiles(File directory, String[] extensions, <span class="type">boolean</span> recursive)</span><br><span class="line"></span><br><span class="line">FileUtils.listFilesAndDirs(File directory, IOFileFilter fileFilter, IOFileFilter dirFilter)</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FileUtils.isSymlink(File file) <span class="comment">// 判断是否是符号链接</span></span><br><span class="line"></span><br><span class="line">FileUtils.directoryContains(File directory, File child) <span class="comment">// 判断文件夹内是否包含某个文件或者文件夹</span></span><br><span class="line"></span><br><span class="line">&nbsp;FileUtils.sizeOf(File file) <span class="comment">// 获取文件或者文件夹的大小</span></span><br><span class="line"></span><br><span class="line">FileUtils.getTempDirectory()<span class="comment">// 获取临时目录文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.getTempDirectoryPath()<span class="comment">// 获取临时目录路径</span></span><br><span class="line"></span><br><span class="line">FileUtils.getUserDirectory()<span class="comment">// 获取用户目录文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.getUserDirectoryPath()<span class="comment">// 获取用户目录路径</span></span><br><span class="line"></span><br><span class="line">FileUtils.touch(File file) <span class="comment">// 创建文件</span></span><br><span class="line"></span><br><span class="line">FileUtils.contentEquals(File file1, File file2) <span class="comment">// 比较两个文件内容是否相同</span></span><br></pre></td></tr></tbody></table></figure><h1 id="FilenameUtils（文件名-后缀名相关）"><a href="#FilenameUtils（文件名-后缀名相关）" class="headerlink" title="FilenameUtils（文件名/后缀名相关）"></a>FilenameUtils（文件名/后缀名相关）</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">FilenameUtils.concat(String basePath, String fullFilenameToAdd) <span class="comment">// 合并目录和文件名为文件全路径</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.getBaseName(String filename) <span class="comment">// 去除目录和后缀后的文件名</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.getExtension(String filename) <span class="comment">// 获取文件的后缀</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.getFullPath(String filename) <span class="comment">// 获取文件的目录</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.getName(String filename) <span class="comment">// 获取文件名</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.getPath(String filename) <span class="comment">// 去除盘符后的路径</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.getPrefix(String filename) <span class="comment">// 盘符</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.indexOfExtension(String filename) <span class="comment">// 获取最后一个.的位置</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.indexOfLastSeparator(String filename) <span class="comment">// 获取最后一个/的位置</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.normalize(String filename) <span class="comment">// 获取当前系统格式化路径</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.removeExtension(String filename) <span class="comment">// 移除文件的扩展名</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.separatorsToSystem(String path) <span class="comment">// 转换分隔符为当前系统分隔符</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.separatorsToUnix(String path) <span class="comment">// 转换分隔符为linux系统分隔符</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.separatorsToWindows(String path) <span class="comment">// 转换分隔符为windows系统分隔符</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.equals(String filename1, String filename2) <span class="comment">// 判断文件路径是否相同，非格式化</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.equalsNormalized(String filename1, String filename2) <span class="comment">// 判断文件路径是否相同，格式化</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.directoryContains(String canonicalParent, String canonicalChild) <span class="comment">// 判断目录下是否包含指定文件或目录</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.isExtension(String filename, String extension) <span class="comment">// 判断文件扩展名是否包含在指定集合(数组、字符串)中</span></span><br><span class="line"></span><br><span class="line">FilenameUtils.wildcardMatch(String filename, String wildcardMatcher) <span class="comment">// 判断文件扩展名是否和指定规则匹配</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> io </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Visual Studio</title>
      <link href="/2023/10/13/%E5%85%B3%E4%BA%8EVisual-Studio/"/>
      <url>/2023/10/13/%E5%85%B3%E4%BA%8EVisual-Studio/</url>
      
        <content type="html"><![CDATA[<p>最近在使用 Visual Studio 进行 c++ 程序的书写时发现了有部分细节需要手动进行改变，能够提高做题或者从其他地方复制代码进行运行的效率，在这里做部分总结</p><p>1.Visual Studio 没有自带万能头(bits/stdc++.h),需要自己配置</p><ul><li>首先需要找到头文件所在文件夹，这里可以随便先创建一个项目，以 iostream 为例：</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ccd82972-ac0d-47cc-bf06-c698098fdfdb.png"></p><ul><li>然后按住 CTRL 鼠标左键点击 iostream ,进入后左键点击 iostream 选择打开所在的文件夹:</li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/58cdda09-ac0b-4a69-8f0f-a313a700f4f3.png"></p><ul><li>这时就进入了 Visual Studio 存放头文件的目录下，在此目录下新建一个名为 bits 的文件夹，在文件夹中新建一个头文件名为 stdc++.h，文件内容如下：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++ includes used for precompiling -*- C++ -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Copyright (C) 2003-2017 Free Software Foundation, Inc.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This file is part of the GNU ISO C++ Library.  This library is free</span></span><br><span class="line"><span class="comment">// software; you can redistribute it and/or modify it under the</span></span><br><span class="line"><span class="comment">// terms of the GNU General Public License as published by the</span></span><br><span class="line"><span class="comment">// Free Software Foundation; either version 3, or (at your option)</span></span><br><span class="line"><span class="comment">// any later version.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// This library is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment">// GNU General Public License for more details.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Under Section 7 of GPL version 3, you are granted additional</span></span><br><span class="line"><span class="comment">// permissions described in the GCC Runtime Library Exception, version</span></span><br><span class="line"><span class="comment">// 3.1, as published by the Free Software Foundation.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// You should have received a copy of the GNU General Public License and</span></span><br><span class="line"><span class="comment">// a copy of the GCC Runtime Library Exception along with this program;</span></span><br><span class="line"><span class="comment">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span></span><br><span class="line"><span class="comment">// &lt;http://www.gnu.org/licenses/&gt;.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @file stdc++.h</span></span><br><span class="line"><span class="comment"> *  This is an implementation file for a precompiled header.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 17.4.1.2 Headers</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// C</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _GLIBCXX_NO_ASSERT</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cerrno&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ciso646&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clocale&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;csetjmp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;csignal&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdarg&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstddef&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt;= 201103L</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ccomplex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cfenv&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cinttypes&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdalign&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdbool&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdint&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctgmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cwchar&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cwctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// C++</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;exception&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ios&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iosfwd&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;istream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;new&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdexcept&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;streambuf&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;typeinfo&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;valarray&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt;= 201103L</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;array&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atomic&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;condition_variable&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;forward_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;future&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;initializer_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ratio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;regex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;scoped_allocator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;system_error&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tuple&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;typeindex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>保存并退出，现在就可以正常使用万能头了</p><p>2.Visual Studio 认为 scanf 函数不安全，必须使用 scanf_s 替换，否则报错</p><ul><li><p>找到 Visual Studio 安装目录，打开名为 VC 的文件夹，点击 VCProjectItems 进入后可以找到一份名为 newc++file.cpp 的文件：</p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/47bc0708-676f-4199-8459-160a8baf5bcc.png"></p><p>所有新建的.c / .cpp文件都会拷贝到newc++file.cpp这个文件中，接下来在里面加入一段宏定义:</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define_CRT_SECURE_NO_WARNINGS <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fc28abd3-f467-4b93-9e4c-00874bf9903c.png"></p></li></ul><p> 保存并退出，现在使用 scanf 就不会报错了</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些有趣的网站</title>
      <link href="/2023/09/30/%E4%B8%80%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99/"/>
      <url>/2023/09/30/%E4%B8%80%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="16-Personalities-性格测试"><a href="#16-Personalities-性格测试" class="headerlink" title="16 Personalities(性格测试)"></a><a href="https://www.16personalities.com/ch">16 Personalities</a>(性格测试)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/310bb4bd-9e61-4aab-b9b7-67b4a82939ca.png"></p><ul><li><h3 id="8-values-政治立场测试"><a href="#8-values-政治立场测试" class="headerlink" title="8 values(政治立场测试)"></a><a href="https://songyon.github.io/8valuescn/">8 values</a>(政治立场测试)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4fd868d7-89db-422c-84f5-3d1b8bc0955a.png"></p><ul><li><h3 id="纪妖-这是一个收录中国古今中外所有妖怪的网站"><a href="#纪妖-这是一个收录中国古今中外所有妖怪的网站" class="headerlink" title="纪妖(这是一个收录中国古今中外所有妖怪的网站)"></a><a href="http://www.cbaigui.com/">纪妖</a>(这是一个收录中国古今中外所有妖怪的网站)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/4cb895e8-6980-4cbd-a4c2-d16badc02e3d.png"></p><ul><li><h3 id="weavesilk-一个具有科技感的对称绘图网站，不需要任何基础你也能画出就具有艺术感的图片"><a href="#weavesilk-一个具有科技感的对称绘图网站，不需要任何基础你也能画出就具有艺术感的图片" class="headerlink" title="weavesilk(一个具有科技感的对称绘图网站，不需要任何基础你也能画出就具有艺术感的图片)"></a><a href="http://weavesilk.com/">weavesilk</a>(一个具有科技感的对称绘图网站，不需要任何基础你也能画出就具有艺术感的图片)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d91fe33b-6765-43e0-9924-94a624529ffc.png"></p><ul><li><h3 id="查找不动的表情包-密集恐惧者慎入"><a href="#查找不动的表情包-密集恐惧者慎入" class="headerlink" title="查找不动的表情包(密集恐惧者慎入)"></a><a href="http://emojisandearthporn.com/">查找不动的表情包</a>(密集恐惧者慎入)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/d21f042b-ea97-4862-9115-9bdf2fc56672.png"></p><ul><li><h3 id="GeekTyper：装逼利器-Geek-Typer是一个模拟黑客工作的页面，提供了多种黑客工作的场景"><a href="#GeekTyper：装逼利器-Geek-Typer是一个模拟黑客工作的页面，提供了多种黑客工作的场景" class="headerlink" title="GeekTyper：装逼利器(Geek Typer是一个模拟黑客工作的页面，提供了多种黑客工作的场景)"></a><a href="https://geektyper.com/matrix/">GeekTyper：装逼利器</a>(Geek Typer是一个模拟黑客工作的页面，提供了多种黑客工作的场景)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/e03ff9d1-226e-426b-9f86-d95cade6c00e.png"></p><ul><li><h3 id="魔法键盘敲击键盘产生字符号"><a href="#魔法键盘敲击键盘产生字符号" class="headerlink" title="魔法键盘敲击键盘产生字符号"></a><a href="http://magickeyboard.io/">魔法键盘</a>敲击键盘产生字符号</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/742f7743-614f-473d-af58-3df6f86006a5.png"></p><ul><li><h3 id="实时地球（实时图像每-10-分钟更新一次，提供风暴、天气预报、降水、火警等数据）"><a href="#实时地球（实时图像每-10-分钟更新一次，提供风暴、天气预报、降水、火警等数据）" class="headerlink" title="实时地球（实时图像每 10 分钟更新一次，提供风暴、天气预报、降水、火警等数据）"></a><a href="https://zoom.earth/">实时地球</a>（实时图像每 10 分钟更新一次，提供风暴、天气预报、降水、火警等数据）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/370b512b-1122-49db-bc86-06b130e221de.png"></p><ul><li><h3 id="深海（海洋不同深度都有什么生物）"><a href="#深海（海洋不同深度都有什么生物）" class="headerlink" title="深海（海洋不同深度都有什么生物）"></a><a href="https://neal.fun/deep-sea/">深海</a>（海洋不同深度都有什么生物）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/33226af7-b280-483c-a595-e4ea14a18229.png"></p><ul><li><h3 id="克苏鲁公社（克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站）"><a href="#克苏鲁公社（克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站）" class="headerlink" title="克苏鲁公社（克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站）"></a><a href="https://www.cthulhuclub.com/">克苏鲁公社</a>（克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/27e4726c-dfa6-4c33-9fee-88e1468b9f22.png"></p><ul><li><h3 id="世界人口时钟（-网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长）"><a href="#世界人口时钟（-网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长）" class="headerlink" title="世界人口时钟（ 网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长）"></a><a href="https://countrymeters.info/cn/">世界人口时钟</a>（ 网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/69ed96ad-7f48-4250-abc5-16dcaa3cccb6.png"></p><ul><li><h3 id="物种-2000-中国节点（该网站建立和维护中国生物物种名录）"><a href="#物种-2000-中国节点（该网站建立和维护中国生物物种名录）" class="headerlink" title="物种 2000 中国节点（该网站建立和维护中国生物物种名录）"></a><a href="http://sp2000.org.cn/">物种 2000 中国节点</a>（该网站建立和维护中国生物物种名录）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ac09d697-eb60-401d-a2fb-099d41d3458e.png"></p><ul><li><h3 id="核弹威力（选择某个核弹查看爆炸影响的范围大小）"><a href="#核弹威力（选择某个核弹查看爆炸影响的范围大小）" class="headerlink" title="核弹威力（选择某个核弹查看爆炸影响的范围大小）"></a><a href="https://nuclearsecrecy.com/nukemap/">核弹威力</a>（选择某个核弹查看爆炸影响的范围大小）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ed4768f9-c31c-4db5-a8b2-121d572b582e.png"></p><ul><li><h3 id="极像素（超高像素看世界）"><a href="#极像素（超高像素看世界）" class="headerlink" title="极像素（超高像素看世界）"></a><a href="https://www.sigoo.com/#google_vignette">极像素</a>（超高像素看世界）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/dc0297a6-ac9f-4b1e-8e8b-e9e264be7dff.png"></p><ul><li><h3 id="喂金鱼（喂赛博金鱼，过电子人生）"><a href="#喂金鱼（喂赛博金鱼，过电子人生）" class="headerlink" title="喂金鱼（喂赛博金鱼，过电子人生）"></a><a href="https://goldfishies.com/">喂金鱼</a>（喂赛博金鱼，过电子人生）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fd1aa7e1-6db6-4b7b-b59d-efca82278e90.png"></p><ul><li><h3 id="AI音乐（只需要选择风格，填入你自己编的歌词，这个网站就能自动帮你生成一首歌）"><a href="#AI音乐（只需要选择风格，填入你自己编的歌词，这个网站就能自动帮你生成一首歌）" class="headerlink" title="AI音乐（只需要选择风格，填入你自己编的歌词，这个网站就能自动帮你生成一首歌）"></a><a href="https://app.songr.ai/">AI音乐</a>（只需要选择风格，填入你自己编的歌词，这个网站就能自动帮你生成一首歌）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/0f5b1210-c1b4-4deb-a636-6d5c8cbaed51.png"></p><ul><li><h3 id="世界名画在线拼图（网上名画博物馆）"><a href="#世界名画在线拼图（网上名画博物馆）" class="headerlink" title="世界名画在线拼图（网上名画博物馆）"></a><a href="https://gallerix.asia/">世界名画在线拼图</a>（网上名画博物馆）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/5580844a-1524-47d3-9f68-1d73b1d6c1ab.png"></p><ul><li><h3 id="Poki-一个国外的免费游戏合集网站，它里面大概有2万多个游戏"><a href="#Poki-一个国外的免费游戏合集网站，它里面大概有2万多个游戏" class="headerlink" title="Poki(一个国外的免费游戏合集网站，它里面大概有2万多个游戏)"></a><a href="https://poki.com/zh">Poki</a>(一个国外的免费游戏合集网站，它里面大概有2万多个游戏)</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/8e7ead06-85c6-46f8-a25f-d1628203409b.png"></p><ul><li><h3 id="在线手机博物馆（一个手机在线博物馆网站，它里面收录了200-多个不同品牌的2500多个独立模型，各种以前见过的或者没见过的手机，在这都能查看。）"><a href="#在线手机博物馆（一个手机在线博物馆网站，它里面收录了200-多个不同品牌的2500多个独立模型，各种以前见过的或者没见过的手机，在这都能查看。）" class="headerlink" title="在线手机博物馆（一个手机在线博物馆网站，它里面收录了200 多个不同品牌的2500多个独立模型，各种以前见过的或者没见过的手机，在这都能查看。）"></a><a href="https://www.mobilephonemuseum.com/">在线手机博物馆</a>（一个手机在线博物馆网站，它里面收录了200 多个不同品牌的2500多个独立模型，各种以前见过的或者没见过的手机，在这都能查看。）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/0e1c6447-6b15-42eb-a7d5-f0fd69b17a0a.png"></p><ul><li><h3 id="找色差小游戏（一个测试眼睛对颜色明暗度的网站）"><a href="#找色差小游戏（一个测试眼睛对颜色明暗度的网站）" class="headerlink" title="找色差小游戏（一个测试眼睛对颜色明暗度的网站）"></a><a href="https://www.zhaosecha.com/">找色差小游戏</a>（一个测试眼睛对颜色明暗度的网站）</h3></li></ul><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/31704616-b3b0-4d2d-b39c-6a2d25a0efe4.png"></p><p><code> 待续</code></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常摄影</title>
      <link href="/2023/09/29/%E6%97%A5%E5%B8%B8%E6%91%84%E5%BD%B1/"/>
      <url>/2023/09/29/%E6%97%A5%E5%B8%B8%E6%91%84%E5%BD%B1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="320" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1373444265&amp;auto=1&amp;height=66"></iframe><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/7845b447-3b4c-4714-9d95-1e44b464ee6b.jpg" alt="日出"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/bfed7a0a-9c14-42a1-ba78-43ec9fc89ddc.jpg"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/421dd3eb-dd2b-47cd-b32d-77cb009d40bb.jpg" alt="路边"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/ad69a0e7-0e8c-4ee0-a83d-21aae7a6ece1.jpg" alt="乡间"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fdca8c67-08e2-48ae-a4f9-918416785049.jpg" alt="蝉"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/743efdc9-94bf-4bde-99ff-c9fe7ef964b0.jpg" alt="晨曦"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/9a423adb-7244-4e1f-9c47-e05242328261.jpg" alt="路口"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/2b462c09-3d20-4b94-a0c3-550e7ef9c372.jpg" alt="雨天"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/140da3dd-7bde-40b0-bc0d-867349d892c2.jpg" alt="夜空"></p><p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/c3db0899-57a6-4115-b6a1-0e927be15fd9.jpg"></p><blockquote><p>TV</p></blockquote><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=787453055&amp;bvid=BV1614y1i73E&amp;cid=1238661068&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=536911587&amp;bvid=BV1Fi4y1v7db&amp;cid=1360392194&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=975542078&amp;bvid=BV1n44y1b7Ta&amp;cid=412874424&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=1006253212&amp;bvid=BV1Nx4y147n3&amp;cid=1619560639&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发中常用的依赖和配置文件</title>
      <link href="/2023/09/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BE%9D%E8%B5%96/"/>
      <url>/2023/09/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BE%9D%E8%B5%96/</url>
      
        <content type="html"><![CDATA[<p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fb025ea8-87f0-439f-84d1-50495c3898b3.jpeg" alt="picture"></p><p>在使用springboot进行javaweb开发时有许多依赖和配置文件需要手动添加，在这里进行阶段性的汇总</p><h2 id="JWT令牌工具类需要的依赖"><a href="#JWT令牌工具类需要的依赖" class="headerlink" title="JWT令牌工具类需要的依赖"></a>JWT令牌工具类需要的依赖</h2><blockquote><p>要顺利生成JWT令牌，需要注入此依赖</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="SpringBoot项目结合JWT所需依赖"><a href="#SpringBoot项目结合JWT所需依赖" class="headerlink" title="SpringBoot项目结合JWT所需依赖"></a>SpringBoot项目结合JWT所需依赖</h2><blockquote><p>使用的jdk版本过高在生成JWT令牌时会报错(java.lang.ClassNotFoundException:javax.xml.bind.DatatypeConverter)，之前java8及以前的版本是默认包含jaxb-api包的，但是升级后的版本就需要手动来导入这个包了。</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>如果只加入上面的依赖还是报错，则在加入上面依赖的基础上继续加入以下依赖</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.activation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="fastjson依赖"><a href="#fastjson依赖" class="headerlink" title="fastjson依赖"></a>fastjson依赖</h2><blockquote><p>阿里巴巴提供了一种JSON转换工具类JSONObject，可以将Java对象转换为 JSON 格式，也可以将 JSON 字符串转换为Java对象，使用前需要注入此依赖</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.76<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Mybatis-plus依赖"><a href="#Mybatis-plus依赖" class="headerlink" title="Mybatis-plus依赖"></a>Mybatis-plus依赖</h2><blockquote><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus</a><a href="https://github.com/baomidou/mybatis-plus"> </a><a href="https://github.com/baomidou/mybatis-plus"> (opens new window)</a>（简称 MP）是一个 <a href="https://www.mybatis.org/mybatis-3/">MyBatis</a><a href="https://www.mybatis.org/mybatis-3/"> </a><a href="https://www.mybatis.org/mybatis-3/"> (opens new window)</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。由国人开发者开发，目前无法在创建springboot时勾选自动注入，需要手动注入</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Mysql数据库驱动依赖"><a href="#Mysql数据库驱动依赖" class="headerlink" title="Mysql数据库驱动依赖"></a>Mysql数据库驱动依赖</h2><blockquote><p>Mysql数据库连接到springboot项目需要注入的依赖</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.29<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="代码生成器依赖"><a href="#代码生成器依赖" class="headerlink" title="代码生成器依赖"></a>代码生成器依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Mybatis-plus代码生成需要的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mybatis-plus代码生成器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="分页查询插件PageHelper依赖"><a href="#分页查询插件PageHelper依赖" class="headerlink" title="分页查询插件PageHelper依赖"></a>分页查询插件PageHelper依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="阿里云OSS依赖"><a href="#阿里云OSS依赖" class="headerlink" title="阿里云OSS依赖"></a>阿里云OSS依赖</h2><p><a href="#%E9%98%BF%E9%87%8C%E4%BA%91OSS%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%88yml%EF%BC%89"></a></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--阿里云OSS--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.15.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="连接数据库配置文件-yml"><a href="#连接数据库配置文件-yml" class="headerlink" title="连接数据库配置文件(yml)"></a>连接数据库配置文件(yml)</h2><blockquote><p>导入Mysql数据库驱动依赖后需要连接数据库</p></blockquote><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mysql_name</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">name</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br></pre></td></tr></tbody></table></figure><h2 id="数据库下划线命名和相应实体类的驼峰命名匹配开关配置文件-yml"><a href="#数据库下划线命名和相应实体类的驼峰命名匹配开关配置文件-yml" class="headerlink" title="数据库下划线命名和相应实体类的驼峰命名匹配开关配置文件(yml)"></a>数据库下划线命名和相应实体类的驼峰命名匹配开关配置文件(yml)</h2><blockquote><p>添加后可以自动将下划线命名与驼峰命名相匹配</p></blockquote><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h2 id="配置日志，查看sql的输出日志-yml"><a href="#配置日志，查看sql的输出日志-yml" class="headerlink" title="配置日志，查看sql的输出日志(yml)"></a>配置日志，查看sql的输出日志(yml)</h2><blockquote><p>需要配置在application.properties中</p></blockquote><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></tbody></table></figure><h2 id="阿里云OSS配置文件（yml）"><a href="#阿里云OSS配置文件（yml）" class="headerlink" title="阿里云OSS配置文件（yml）"></a>阿里云OSS配置文件（yml）</h2><p><a href="#%E9%98%BF%E9%87%8C%E4%BA%91OSS%E4%BE%9D%E8%B5%96"></a></p><blockquote><p>需要配置在application.properties中</p></blockquote><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">oss:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">https://oss-cn-beijing.aliyuncs.com</span></span><br><span class="line">    <span class="attr">accessKeyId:</span> <span class="string">accessKeyId</span></span><br><span class="line">    <span class="attr">accessKeySecret:</span> <span class="string">accessKeySecret</span></span><br><span class="line">    <span class="attr">bucketName:</span> <span class="string">name</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Redis-所需依赖"><a href="#Redis-所需依赖" class="headerlink" title="Redis 所需依赖"></a>Redis 所需依赖</h2><blockquote><p>需要进行配置</p></blockquote><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Spring-cloud-依赖"><a href="#Spring-cloud-依赖" class="headerlink" title="Spring cloud 依赖"></a>Spring cloud 依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring cloud--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spring-cloud.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="糊涂工具包依赖"><a href="#糊涂工具包依赖" class="headerlink" title="糊涂工具包依赖"></a>糊涂工具包依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--hutool工具包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>${hutool.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="openFeign依赖"><a href="#openFeign依赖" class="headerlink" title="openFeign依赖"></a>openFeign依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--openFeign--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="负载均衡器依赖"><a href="#负载均衡器依赖" class="headerlink" title="负载均衡器依赖"></a>负载均衡器依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--负载均衡器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="nacos服务注册依赖"><a href="#nacos服务注册依赖" class="headerlink" title="nacos服务注册依赖"></a>nacos服务注册依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--nacos 服务注册发现--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="AMQP依赖"><a href="#AMQP依赖" class="headerlink" title="AMQP依赖"></a>AMQP依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--AMQP依赖，包含RabbitMQ--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="jackson依赖"><a href="#jackson依赖" class="headerlink" title="jackson依赖"></a>jackson依赖</h2><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jackson依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code> 未完待续</code></p>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaweb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发过程中常用的类</title>
      <link href="/2023/09/27/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E7%B1%BB/"/>
      <url>/2023/09/27/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p><img src="https://rorschachblog01.oss-cn-beijing.aliyuncs.com/fb025ea8-87f0-439f-84d1-50495c3898b3.jpeg"></p><p>写在之前：在进行javaweb的学习中，有许多的类是能够直接复用的，我将一些经常用到的类总结在这里方便能够随时看看复习<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="JWT-令牌工具类"><a href="#JWT-令牌工具类" class="headerlink" title="JWT 令牌工具类"></a>JWT 令牌工具类</h2><blockquote><p>注意：在使用该类之前需要注入相关依赖</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtils</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">signKey</span> <span class="operator">=</span> <span class="string">"xxxxx"</span>; <span class="comment">//JWT的签名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Long</span> <span class="variable">expire</span> <span class="operator">=</span> <span class="number">43200000L</span>; <span class="comment">//JWT令牌有效时间，单位：ms</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成JWT令牌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">generateJwt</span><span class="params">(Map&lt;String, Object&gt; claims)</span>{</span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> Jwts.builder()</span><br><span class="line">                .addClaims(claims)</span><br><span class="line">                .signWith(SignatureAlgorithm.HS256, signKey)</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + expire))</span><br><span class="line">                .compact();</span><br><span class="line">        <span class="keyword">return</span> jwt;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *解析JWT令牌</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Claims <span class="title function_">parseJWT</span><span class="params">(String jwt)</span>{</span><br><span class="line">        <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> Jwts.parser()</span><br><span class="line">                .setSigningKey(signKey)</span><br><span class="line">                .parseClaimsJws(jwt)</span><br><span class="line">                .getBody();</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="响应结果实体类"><a href="#响应结果实体类" class="headerlink" title="响应结果实体类"></a>响应结果实体类</h2><blockquote><p>在写实体类时可以选择引入lombok依赖，使用相关注解如@Data,@AllArgsConstructor,@NoArgsConstructor可以大大简化需要写出的内容，后面的类中用到的Result都是此处的Result</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> {</span><br><span class="line">    Integer code;</span><br><span class="line">    String msg;</span><br><span class="line">    Object data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Integer code, String msg, Object data)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> {</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> {</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Result{"</span> +</span><br><span class="line">                <span class="string">"code="</span> + code +</span><br><span class="line">                <span class="string">", msg='"</span> + msg + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", data="</span> + data +</span><br><span class="line">                <span class="string">'}'</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    *这里的静态方法可以根据自己的需要具体来写</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">200</span>,<span class="string">"success"</span>,<span class="literal">null</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">(Object data)</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">200</span>,<span class="string">"success"</span>,data);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String msg)</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">0</span>,msg,<span class="literal">null</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="Interceptor-拦截器类"><a href="#Interceptor-拦截器类" class="headerlink" title="Interceptor 拦截器类"></a>Interceptor 拦截器类</h2><blockquote><p>使用时必须配合相应的配置类，否则无法生效</p></blockquote><p>请参考配置类 <a href="#%E6%8B%A6%E6%88%AA%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E7%B1%BB">拦截器的配置类</a></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        </span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> request.getRequestURI();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(url.contains(<span class="string">"login"</span>)){</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> request.getHeader(<span class="string">"token"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.hasLength(jwt)){</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">"NOT_LOGIN"</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">noLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            response.getWriter().write(noLogin);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            JwtUtils.parseJWT(jwt);</span><br><span class="line">        }<span class="keyword">catch</span> (Exception e){</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">"NOT_LOGIN"</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">noLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            response.getWriter().write(noLogin);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        HandlerInterceptor.<span class="built_in">super</span>.postHandle(request, response, handler, modelAndView);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        HandlerInterceptor.<span class="built_in">super</span>.afterCompletion(request, response, handler, ex);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="拦截器的配置类"><a href="#拦截器的配置类" class="headerlink" title="拦截器的配置类"></a>拦截器的配置类</h2><blockquote><p>为写好的拦截器进行配置，不要省略配置类注解@Configuration</p></blockquote><p>拦截器类<a href="#Interceptor%E6%8B%A6%E6%88%AA%E5%99%A8%E7%B1%BB">Inteceptor拦截器</a></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> {</span><br><span class="line">   </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginInterceptor loginInterceptor;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> {</span><br><span class="line">        registry.addInterceptor(loginInterceptor).addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="Filter-过滤器类"><a href="#Filter-过滤器类" class="headerlink" title="Filter 过滤器类"></a>Filter 过滤器类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(urlPatterns = "/*")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Filter</span> <span class="keyword">implements</span> <span class="title class_">javax</span>.servlet.Filter {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException {</span><br><span class="line">        javax.servlet.Filter.<span class="built_in">super</span>.init(filterConfig);</span><br><span class="line">        System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException {</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> req.getRequestURL().toString();</span><br><span class="line">        <span class="keyword">if</span>(url.contains(<span class="string">"login"</span>)){</span><br><span class="line">            filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> req.getHeader(<span class="string">"token"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.hasLength(jwt)){</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">"NOT_LOGIN"</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">noLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            resp.getWriter().write(noLogin);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            JwtUtils.parseJWT(jwt);</span><br><span class="line">        }<span class="keyword">catch</span> (Exception e){</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">"NOT_LOGIN"</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">noLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            resp.getWriter().write(noLogin);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> {</span><br><span class="line">        javax.servlet.Filter.<span class="built_in">super</span>.destroy();</span><br><span class="line">        System.out.println(<span class="string">"销毁"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="全局异常处理器类"><a href="#全局异常处理器类" class="headerlink" title="全局异常处理器类"></a>全局异常处理器类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GolableException</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">handler</span><span class="params">()</span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">"进行了全局异常处理"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><blockquote><p>在写该类时可以选择引入lombok依赖，使用相关注解如@Data,@AllArgsConstructor,@NoArgsConstructor可以大大简化需要写出的内容</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>{</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomException</span><span class="params">(Integer code, String msg)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> {</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"CustomException{"</span> +</span><br><span class="line">                <span class="string">"code="</span> + code +</span><br><span class="line">                <span class="string">", msg='"</span> + msg + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'}'</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="在全局异常处理类中添加自定义异常"><a href="#在全局异常处理类中添加自定义异常" class="headerlink" title="在全局异常处理类中添加自定义异常"></a>在全局异常处理类中添加自定义异常</h2><p><a href="#%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8%E7%B1%BB">全局异常处理器类</a></p><p><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8">自定义异常</a></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> {</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(CustomException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">error</span><span class="params">(CustomException e)</span>{</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMsg());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="阿里云-OSS-图片上传工具类"><a href="#阿里云-OSS-图片上传工具类" class="headerlink" title="阿里云 OSS 图片上传工具类"></a>阿里云 OSS 图片上传工具类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSUtils</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value("${aliyun.oss.endpoint}")</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="meta">@Value("${aliyun.oss.accessKeyId}")</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="meta">@Value("${aliyun.oss.accessKeySecret}")</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="meta">@Value("${aliyun.oss.bucketName}")</span></span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现上传图片到OSS</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">        <span class="comment">// 获取上传的文件的输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 避免文件覆盖</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> UUID.randomUUID().toString() + originalFilename.substring(originalFilename.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//上传文件到 OSS</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">        ossClient.putObject(bucketName, fileName, inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件访问路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> endpoint.split(<span class="string">"//"</span>)[<span class="number">0</span>] + <span class="string">"//"</span> + bucketName + <span class="string">"."</span> + endpoint.split(<span class="string">"//"</span>)[<span class="number">1</span>] + <span class="string">"/"</span> + fileName;</span><br><span class="line">        <span class="comment">// 关闭ossClient</span></span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">        <span class="keyword">return</span> url;<span class="comment">// 把上传到oss的路径返回</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="RedisTemplate-配置类"><a href="#RedisTemplate-配置类" class="headerlink" title="RedisTemplate 配置类"></a>RedisTemplate 配置类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfiguration</span> {</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span>{</span><br><span class="line">        <span class="type">RedisTemplate</span> <span class="variable">redisTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>();</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="HttpClient-工具类"><a href="#HttpClient-工具类" class="headerlink" title="HttpClient 工具类"></a>HttpClient 工具类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Http工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpClientUtil</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TIMEOUT_MSEC</span> <span class="operator">=</span> <span class="number">5</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送GET方式请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url,Map&lt;String,String&gt; paramMap)</span>{</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>{</span><br><span class="line">            <span class="type">URIBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URIBuilder</span>(url);</span><br><span class="line">            <span class="keyword">if</span>(paramMap != <span class="literal">null</span>){</span><br><span class="line">                <span class="keyword">for</span> (String key : paramMap.keySet()) {</span><br><span class="line">                    builder.addParameter(key,paramMap.get(key));</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="type">URI</span> <span class="variable">uri</span> <span class="operator">=</span> builder.build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建GET请求</span></span><br><span class="line">            <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(uri);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//发送请求</span></span><br><span class="line">            response = httpClient.execute(httpGet);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断响应状态</span></span><br><span class="line">            <span class="keyword">if</span>(response.getStatusLine().getStatusCode() == <span class="number">200</span>){</span><br><span class="line">                result = EntityUtils.toString(response.getEntity(),<span class="string">"UTF-8"</span>);</span><br><span class="line">            }</span><br><span class="line">        }<span class="keyword">catch</span> (Exception e){</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }<span class="keyword">finally</span> {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                response.close();</span><br><span class="line">                httpClient.close();</span><br><span class="line">            } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送POST方式请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String url, Map&lt;String, String&gt; paramMap)</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultString</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// 创建Http Post请求</span></span><br><span class="line">            <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建参数列表</span></span><br><span class="line">            <span class="keyword">if</span> (paramMap != <span class="literal">null</span>) {</span><br><span class="line">                List&lt;NameValuePair&gt; paramList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; param : paramMap.entrySet()) {</span><br><span class="line">                    paramList.add(<span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(param.getKey(), param.getValue()));</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">// 模拟表单</span></span><br><span class="line">                <span class="type">UrlEncodedFormEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(paramList);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            httpPost.setConfig(builderRequestConfig());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行http请求</span></span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line"></span><br><span class="line">            resultString = EntityUtils.toString(response.getEntity(), <span class="string">"UTF-8"</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                response.close();</span><br><span class="line">            } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultString;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送POST方式请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost4Json</span><span class="params">(String url, Map&lt;String, String&gt; paramMap)</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultString</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// 创建Http Post请求</span></span><br><span class="line">            <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (paramMap != <span class="literal">null</span>) {</span><br><span class="line">                <span class="comment">//构造json格式数据</span></span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; param : paramMap.entrySet()) {</span><br><span class="line">                    jsonObject.put(param.getKey(),param.getValue());</span><br><span class="line">                }</span><br><span class="line">                <span class="type">StringEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(jsonObject.toString(),<span class="string">"utf-8"</span>);</span><br><span class="line">                <span class="comment">//设置请求编码</span></span><br><span class="line">                entity.setContentEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">                <span class="comment">//设置数据类型</span></span><br><span class="line">                entity.setContentType(<span class="string">"application/json"</span>);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            httpPost.setConfig(builderRequestConfig());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行http请求</span></span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line"></span><br><span class="line">            resultString = EntityUtils.toString(response.getEntity(), <span class="string">"UTF-8"</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                response.close();</span><br><span class="line">            } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultString;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig <span class="title function_">builderRequestConfig</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> RequestConfig.custom()</span><br><span class="line">                .setConnectTimeout(TIMEOUT_MSEC)</span><br><span class="line">                .setConnectionRequestTimeout(TIMEOUT_MSEC)</span><br><span class="line">                .setSocketTimeout(TIMEOUT_MSEC).build();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="微信支付工具类"><a href="#微信支付工具类" class="headerlink" title="微信支付工具类"></a>微信支付工具类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信支付工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeChatPayUtil</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">//微信支付下单接口地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JSAPI</span> <span class="operator">=</span> <span class="string">"https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//申请退款接口地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REFUNDS</span> <span class="operator">=</span> <span class="string">"https://api.mch.weixin.qq.com/v3/refund/domestic/refunds"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WeChatProperties weChatProperties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取调用微信接口的客户端工具对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> CloseableHttpClient <span class="title function_">getClient</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">PrivateKey</span> <span class="variable">merchantPrivateKey</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//merchantPrivateKey商户API私钥，如何加载商户API私钥请看常见问题</span></span><br><span class="line">            merchantPrivateKey = PemUtil.loadPrivateKey(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(weChatProperties.getPrivateKeyFilePath())));</span><br><span class="line">            <span class="comment">//加载平台证书文件</span></span><br><span class="line">            <span class="type">X509Certificate</span> <span class="variable">x509Certificate</span> <span class="operator">=</span> PemUtil.loadCertificate(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(weChatProperties.getWeChatPayCertFilePath())));</span><br><span class="line">            <span class="comment">//wechatPayCertificates微信支付平台证书列表。你也可以使用后面章节提到的“定时更新平台证书功能”，而不需要关心平台证书的来龙去脉</span></span><br><span class="line">            List&lt;X509Certificate&gt; wechatPayCertificates = Arrays.asList(x509Certificate);</span><br><span class="line"></span><br><span class="line">            <span class="type">WechatPayHttpClientBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> WechatPayHttpClientBuilder.create()</span><br><span class="line">                    .withMerchant(weChatProperties.getMchid(), weChatProperties.getMchSerialNo(), merchantPrivateKey)</span><br><span class="line">                    .withWechatPay(wechatPayCertificates);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过WechatPayHttpClientBuilder构造的HttpClient，会自动的处理签名和验签</span></span><br><span class="line">            <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> builder.build();</span><br><span class="line">            <span class="keyword">return</span> httpClient;</span><br><span class="line">        } <span class="keyword">catch</span> (FileNotFoundException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送post方式请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">post</span><span class="params">(String url, String body)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> getClient();</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">        httpPost.addHeader(HttpHeaders.ACCEPT, ContentType.APPLICATION_JSON.toString());</span><br><span class="line">        httpPost.addHeader(HttpHeaders.CONTENT_TYPE, ContentType.APPLICATION_JSON.toString());</span><br><span class="line">        httpPost.addHeader(<span class="string">"Wechatpay-Serial"</span>, weChatProperties.getMchSerialNo());</span><br><span class="line">        httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(body, <span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpPost);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">String</span> <span class="variable">bodyAsString</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">            <span class="keyword">return</span> bodyAsString;</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            httpClient.close();</span><br><span class="line">            response.close();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送get方式请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">get</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> getClient();</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        httpGet.addHeader(HttpHeaders.ACCEPT, ContentType.APPLICATION_JSON.toString());</span><br><span class="line">        httpGet.addHeader(HttpHeaders.CONTENT_TYPE, ContentType.APPLICATION_JSON.toString());</span><br><span class="line">        httpGet.addHeader(<span class="string">"Wechatpay-Serial"</span>, weChatProperties.getMchSerialNo());</span><br><span class="line"></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpGet);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">String</span> <span class="variable">bodyAsString</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">            <span class="keyword">return</span> bodyAsString;</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            httpClient.close();</span><br><span class="line">            response.close();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jsapi下单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orderNum    商户订单号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total       总金额</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> description 商品描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> openid      微信用户的openid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">jsapi</span><span class="params">(String orderNum, BigDecimal total, String description, String openid)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        jsonObject.put(<span class="string">"appid"</span>, weChatProperties.getAppid());</span><br><span class="line">        jsonObject.put(<span class="string">"mchid"</span>, weChatProperties.getMchid());</span><br><span class="line">        jsonObject.put(<span class="string">"description"</span>, description);</span><br><span class="line">        jsonObject.put(<span class="string">"out_trade_no"</span>, orderNum);</span><br><span class="line">        jsonObject.put(<span class="string">"notify_url"</span>, weChatProperties.getNotifyUrl());</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">amount</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        amount.put(<span class="string">"total"</span>, total.multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">100</span>)).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP).intValue());</span><br><span class="line">        amount.put(<span class="string">"currency"</span>, <span class="string">"CNY"</span>);</span><br><span class="line"></span><br><span class="line">        jsonObject.put(<span class="string">"amount"</span>, amount);</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">payer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        payer.put(<span class="string">"openid"</span>, openid);</span><br><span class="line"></span><br><span class="line">        jsonObject.put(<span class="string">"payer"</span>, payer);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> jsonObject.toJSONString();</span><br><span class="line">        <span class="keyword">return</span> post(JSAPI, body);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小程序支付</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orderNum    商户订单号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total       金额，单位 元</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> description 商品描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> openid      微信用户的openid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">pay</span><span class="params">(String orderNum, BigDecimal total, String description, String openid)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="comment">//统一下单，生成预支付交易单</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">bodyAsString</span> <span class="operator">=</span> jsapi(orderNum, total, description, openid);</span><br><span class="line">        <span class="comment">//解析返回结果</span></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSON.parseObject(bodyAsString);</span><br><span class="line">        System.out.println(jsonObject);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">prepayId</span> <span class="operator">=</span> jsonObject.getString(<span class="string">"prepay_id"</span>);</span><br><span class="line">        <span class="keyword">if</span> (prepayId != <span class="literal">null</span>) {</span><br><span class="line">            <span class="type">String</span> <span class="variable">timeStamp</span> <span class="operator">=</span> String.valueOf(System.currentTimeMillis() / <span class="number">1000</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">nonceStr</span> <span class="operator">=</span> RandomStringUtils.randomNumeric(<span class="number">32</span>);</span><br><span class="line">            ArrayList&lt;Object&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            list.add(weChatProperties.getAppid());</span><br><span class="line">            list.add(timeStamp);</span><br><span class="line">            list.add(nonceStr);</span><br><span class="line">            list.add(<span class="string">"prepay_id="</span> + prepayId);</span><br><span class="line">            <span class="comment">//二次签名，调起支付需要重新签名</span></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">for</span> (Object o : list) {</span><br><span class="line">                stringBuilder.append(o).append(<span class="string">"\n"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="type">String</span> <span class="variable">signMessage</span> <span class="operator">=</span> stringBuilder.toString();</span><br><span class="line">            <span class="type">byte</span>[] message = signMessage.getBytes();</span><br><span class="line"></span><br><span class="line">            <span class="type">Signature</span> <span class="variable">signature</span> <span class="operator">=</span> Signature.getInstance(<span class="string">"SHA256withRSA"</span>);</span><br><span class="line">            signature.initSign(PemUtil.loadPrivateKey(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(weChatProperties.getPrivateKeyFilePath()))));</span><br><span class="line">            signature.update(message);</span><br><span class="line">            <span class="type">String</span> <span class="variable">packageSign</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(signature.sign());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//构造数据给微信小程序，用于调起微信支付</span></span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            jo.put(<span class="string">"timeStamp"</span>, timeStamp);</span><br><span class="line">            jo.put(<span class="string">"nonceStr"</span>, nonceStr);</span><br><span class="line">            jo.put(<span class="string">"package"</span>, <span class="string">"prepay_id="</span> + prepayId);</span><br><span class="line">            jo.put(<span class="string">"signType"</span>, <span class="string">"RSA"</span>);</span><br><span class="line">            jo.put(<span class="string">"paySign"</span>, packageSign);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> jo;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 申请退款</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> outTradeNo    商户订单号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> outRefundNo   商户退款单号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> refund        退款金额</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> total         原订单金额</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">refund</span><span class="params">(String outTradeNo, String outRefundNo, BigDecimal refund, BigDecimal total)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        jsonObject.put(<span class="string">"out_trade_no"</span>, outTradeNo);</span><br><span class="line">        jsonObject.put(<span class="string">"out_refund_no"</span>, outRefundNo);</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">amount</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        amount.put(<span class="string">"refund"</span>, refund.multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">100</span>)).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP).intValue());</span><br><span class="line">        amount.put(<span class="string">"total"</span>, total.multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">100</span>)).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP).intValue());</span><br><span class="line">        amount.put(<span class="string">"currency"</span>, <span class="string">"CNY"</span>);</span><br><span class="line"></span><br><span class="line">        jsonObject.put(<span class="string">"amount"</span>, amount);</span><br><span class="line">        jsonObject.put(<span class="string">"notify_url"</span>, weChatProperties.getRefundNotifyUrl());</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> jsonObject.toJSONString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用申请退款接口</span></span><br><span class="line">        <span class="keyword">return</span> post(REFUNDS, body);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="BeanUtil"><a href="#BeanUtil" class="headerlink" title="BeanUtil"></a>BeanUtil</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.bean.BeanUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 继承自 hutool 的BeanUtil，增加了bean转换时自定义转换器的功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeanUtils</span> <span class="keyword">extends</span> <span class="title class_">BeanUtil</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将原对象转换成目标对象，对于字段不匹配的字段可以使用转换器处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source  原对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz   目标对象的class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> convert 转换器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;R&gt;     原对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;     目标对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; T <span class="title function_">copyBean</span><span class="params">(R source, Class&lt;T&gt; clazz, Convert&lt;R, T&gt; convert)</span> {</span><br><span class="line">        <span class="type">T</span> <span class="variable">target</span> <span class="operator">=</span> copyBean(source, clazz);</span><br><span class="line">        <span class="keyword">if</span> (convert != <span class="literal">null</span>) {</span><br><span class="line">            convert.convert(source, target);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将原对象转换成目标对象，对于字段不匹配的字段可以使用转换器处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source  原对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz   目标对象的class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;R&gt;     原对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;     目标对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; T <span class="title function_">copyBean</span><span class="params">(R source, Class&lt;T&gt; clazz)</span>{</span><br><span class="line">        <span class="keyword">if</span> (source == <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> toBean(source, clazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; List&lt;T&gt; <span class="title function_">copyList</span><span class="params">(List&lt;R&gt; list, Class&lt;T&gt; clazz)</span> {</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="literal">null</span> || list.size() == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> CollUtils.emptyList();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> copyToList(list, clazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; List&lt;T&gt; <span class="title function_">copyList</span><span class="params">(List&lt;R&gt; list, Class&lt;T&gt; clazz, Convert&lt;R, T&gt; convert)</span> {</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="literal">null</span> || list.size() == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> CollUtils.emptyList();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> list.stream().map(r -&gt; copyBean(r, clazz, convert)).collect(Collectors.toList());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="UserContext"><a href="#UserContext" class="headerlink" title="UserContext"></a>UserContext</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.bean.BeanUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 继承自 hutool 的BeanUtil，增加了bean转换时自定义转换器的功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeanUtils</span> <span class="keyword">extends</span> <span class="title class_">BeanUtil</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将原对象转换成目标对象，对于字段不匹配的字段可以使用转换器处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source  原对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz   目标对象的class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> convert 转换器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;R&gt;     原对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;     目标对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; T <span class="title function_">copyBean</span><span class="params">(R source, Class&lt;T&gt; clazz, Convert&lt;R, T&gt; convert)</span> {</span><br><span class="line">        <span class="type">T</span> <span class="variable">target</span> <span class="operator">=</span> copyBean(source, clazz);</span><br><span class="line">        <span class="keyword">if</span> (convert != <span class="literal">null</span>) {</span><br><span class="line">            convert.convert(source, target);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将原对象转换成目标对象，对于字段不匹配的字段可以使用转换器处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source  原对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz   目标对象的class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;R&gt;     原对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;     目标对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; T <span class="title function_">copyBean</span><span class="params">(R source, Class&lt;T&gt; clazz)</span>{</span><br><span class="line">        <span class="keyword">if</span> (source == <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> toBean(source, clazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; List&lt;T&gt; <span class="title function_">copyList</span><span class="params">(List&lt;R&gt; list, Class&lt;T&gt; clazz)</span> {</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="literal">null</span> || list.size() == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> CollUtils.emptyList();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> copyToList(list, clazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;R, T&gt; List&lt;T&gt; <span class="title function_">copyList</span><span class="params">(List&lt;R&gt; list, Class&lt;T&gt; clazz, Convert&lt;R, T&gt; convert)</span> {</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="literal">null</span> || list.size() == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> CollUtils.emptyList();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> list.stream().map(r -&gt; copyBean(r, clazz, convert)).collect(Collectors.toList());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="WebUtil"><a href="#WebUtil" class="headerlink" title="WebUtil"></a>WebUtil</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.collection.CollUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebUtils</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取ServletRequestAttributes</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ServletRequestAttributes</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ServletRequestAttributes <span class="title function_">getServletRequestAttributes</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">RequestAttributes</span> <span class="variable">ra</span> <span class="operator">=</span> RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (ra == <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> (ServletRequestAttributes) ra;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取request</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> HttpServletRequest</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpServletRequest <span class="title function_">getRequest</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">ServletRequestAttributes</span> <span class="variable">servletRequestAttributes</span> <span class="operator">=</span> getServletRequestAttributes();</span><br><span class="line">        <span class="keyword">return</span> servletRequestAttributes == <span class="literal">null</span> ? <span class="literal">null</span> : servletRequestAttributes.getRequest();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取response</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> HttpServletResponse</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpServletResponse <span class="title function_">getResponse</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">ServletRequestAttributes</span> <span class="variable">servletRequestAttributes</span> <span class="operator">=</span> getServletRequestAttributes();</span><br><span class="line">        <span class="keyword">return</span> servletRequestAttributes == <span class="literal">null</span> ? <span class="literal">null</span> : servletRequestAttributes.getResponse();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取request header中的内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headerName 请求头名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 请求头的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getHeader</span><span class="params">(String headerName)</span> {</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> getRequest();</span><br><span class="line">        <span class="keyword">if</span> (request == <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> getRequest().getHeader(headerName);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setResponseHeader</span><span class="params">(String key, String value)</span>{</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> getResponse();</span><br><span class="line">        <span class="keyword">if</span> (response == <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        response.setHeader(key, value);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSuccess</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> getResponse();</span><br><span class="line">        <span class="keyword">return</span> response != <span class="literal">null</span> &amp;&amp; response.getStatus() &lt; <span class="number">300</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求地址中的请求参数组装成 key1=value1&amp;key2=value2</span></span><br><span class="line"><span class="comment">     * 如果key对应多个值，中间使用逗号隔开例如 key1对应value1，key2对应value2，value3， key1=value1&amp;key2=value2,value3</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回拼接字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getParameters</span><span class="params">(HttpServletRequest request)</span> {</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">        <span class="keyword">return</span> getParameters(parameterMap);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求地址中的请求参数组装成 key1=value1&amp;key2=value2</span></span><br><span class="line"><span class="comment">     * 如果key对应多个值，中间使用逗号隔开例如 key1对应value1，key2对应value2，value3， key1=value1&amp;key2=value2,value3</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queries</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> &lt;T&gt; String <span class="title function_">getParameters</span><span class="params">(<span class="keyword">final</span> Map&lt;String, T&gt; queries)</span> {</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">buffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, T&gt; entry : queries.entrySet()) {</span><br><span class="line">            <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> String[]){</span><br><span class="line">                buffer.append(entry.getKey()).append(String.join(<span class="string">","</span>, ((String[])entry.getValue())))</span><br><span class="line">                    .append(<span class="string">"&amp;"</span>);</span><br><span class="line">            }<span class="keyword">else</span> <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> Collection){</span><br><span class="line">                buffer.append(entry.getKey()).append(</span><br><span class="line">                        CollUtil.join(((Collection&lt;String&gt;)entry.getValue()),<span class="string">","</span>)</span><br><span class="line">                ).append(<span class="string">"&amp;"</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> buffer.length() &gt; <span class="number">0</span> ? buffer.substring(<span class="number">0</span>, buffer.length() - <span class="number">1</span>) : StrUtil.EMPTY;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求url中的uri</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getUri</span><span class="params">(String url)</span>{</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(url)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> url;</span><br><span class="line">        <span class="comment">//uri中去掉 http:// 或者https</span></span><br><span class="line">        <span class="keyword">if</span>(uri.contains(<span class="string">"http://"</span>) ){</span><br><span class="line">            uri = uri.replace(<span class="string">"http://"</span>, StrUtil.EMPTY);</span><br><span class="line">        }<span class="keyword">else</span> <span class="keyword">if</span>(uri.contains(<span class="string">"https://"</span>)){</span><br><span class="line">            uri = uri.replace(<span class="string">"https://"</span>, StrUtil.EMPTY);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">endIndex</span> <span class="operator">=</span> uri.length(); <span class="comment">//uri 在url中的最后一个字符的序号+1</span></span><br><span class="line">        <span class="keyword">if</span>(uri.contains(<span class="string">"?"</span>)){</span><br><span class="line">            endIndex = uri.indexOf(<span class="string">"?"</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> uri.substring(uri.indexOf(<span class="string">"/"</span>), endIndex);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRemoteAddr</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> getRequest();</span><br><span class="line">        <span class="keyword">if</span> (request == <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> request.getRemoteAddr();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CookieBuilder <span class="title function_">cookieBuilder</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CookieBuilder</span>(getRequest(), getResponse());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p> <code>未完待续...... </code></p>]]></content>
      
      
      <categories>
          
          <category> 学习总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaweb </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
